{
  "openapi": "3.0.1",
  "info": {
    "title": "Fan Page Api",
    "version": "v1"
  },
  "paths": {
    "/v1/account/registration": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "UserName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Email",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Password",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ConfirmPassword",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        }
      }
    },
    "/v1/account/google-registration": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "googleToken",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        }
      }
    },
    "/v1/account/confirmEmail": {
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "Email",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Token",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        }
      }
    },
    "/v1/account/changeEmail": {
      "put": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestToChangeEmailModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestToChangeEmailModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestToChangeEmailModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/account/restorePassword": {
      "put": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestToRestorePassModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestToRestorePassModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestToRestorePassModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "Email",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Token",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        }
      }
    },
    "/v1/account": {
      "get": {
        "tags": [
          "Account"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/user": {
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Delete user by ID",
        "description": "This endpoint allows administrators to delete a user from the system based on their ID.\nThe user must be authenticated with a valid JWT bearer token and have admin role\n",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "ID of the user to be deleted.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user with the specified ID has been successfully deleted."
          },
          "400": {
            "description": "Bad Request - The user does not exist or an invalid ID was supplied.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The request lacks valid authentication credentials."
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/admin/ban": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Ban a user for a specified number of days",
        "description": "This endpoint allows administrators to ban a user from the system for a specified number of days.\nThe user must be authenticated with a valid JWT bearer token and have admin or moderator role\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BanModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BanModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BanModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user has been successfully banned for the specified number of days."
          },
          "400": {
            "description": "Bad Request - Invalid ID supplied or an invalid number of days provided.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The request lacks valid authentication credentials."
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/admin/unban": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Unban a user",
        "description": "This endpoint allows administrators to unban a previously banned user.\nThe user must be authenticated with a valid JWT bearer token.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user has been successfully unbanned."
          },
          "400": {
            "description": "Bad Request - Invalid ID supplied.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The request lacks valid authentication credentials."
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/admin/role": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Change user role",
        "description": "This endpoint allows administrators to change the role of a user.\nThe user must be authenticated with a valid JWT bearer token.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRoleModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRoleModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRoleModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The role of the user has been successfully changed."
          },
          "400": {
            "description": "Bad Request - Invalid role supplied or user not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The request lacks valid authentication credentials."
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/admin/moderator": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get moderator information",
        "description": "This endpoint allows administrators to retrieve information about a moderator.\nThe user must be authenticated with a valid JWT bearer token.\n",
        "responses": {
          "200": {
            "description": "Successful retrieval of moderator information.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoViewModelJsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoViewModelJsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoViewModelJsonResponseContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request or parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/admin/approve": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Approve a tag",
        "description": "This endpoint allows administrators to approve a tag.\nThe user must be authenticated with a valid JWT bearer token.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request - Invalid request or parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/admin/notapproved": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get not approved tags",
        "description": "This endpoint allows administrators to retrieve a list of tags that have not been approved yet.\nThe user must be authenticated with a valid JWT bearer token.\n",
        "responses": {
          "400": {
            "description": "Bad Request - Invalid request or parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/auth/google-login": {
      "post": {
        "summary": "Authenticate via Google OAuth2 token",
        "description": "This endpoint allows users to authenticate using a Google OAuth2 token. It generates a JWT token based on the Google token and returns user information along with the token.\n",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "googleToken",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogInViewModelJsonResponseContainer"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LogInViewModelJsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogInViewModelJsonResponseContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/login": {
      "post": {
        "summary": "Log in with username and password",
        "description": "This endpoint allows users to log in using their username and password credentials. It verifies the credentials, generates a JWT token upon successful authentication, and returns user information along with the token.\n",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogInViewModelJsonResponseContainer"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LogInViewModelJsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogInViewModelJsonResponseContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/logout": {
      "post": {
        "summary": "Log out from the system",
        "description": "This endpoint allows users to log out from the system. It invalidates the user's current session and token.\n",
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "Successful logout"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/auth/refreshToken": {
      "post": {
        "summary": "Refresh JWT token",
        "description": "This endpoint allows users to refresh their JWT token to extend their session validity.\n",
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "Successful token refresh",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenViewModelJsonResponseContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/bookmark/Add": {
      "post": {
        "tags": [
          "Bookmark"
        ],
        "summary": "Add a bookmark",
        "description": "This endpoint allows users to add a bookmark associated with a specific fanfic.\nThe user must be authenticated with a valid JWT bearer token.\n",
        "parameters": [
          {
            "name": "fanficId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true,
            "description": "The ID of the fanfic to bookmark"
          }
        ],
        "responses": {
          "200": {
            "description": "Bookmark successfully added."
          },
          "400": {
            "401": {
              "description": "Unauthorized - The request lacks valid authentication credentials."
            },
            "500": {
              "description": "Internal Server Error - An unexpected error occurred on the server.",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            },
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/bookmark/Delete": {
      "delete": {
        "tags": [
          "Bookmark"
        ],
        "summary": "Delete a bookmark",
        "description": "This endpoint allows users to delete a bookmark associated with a specific fanfic.\nThe user must be authenticated with a valid JWT bearer token.\n",
        "parameters": [
          {
            "name": "fanficId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bookmark successfully deleted."
          },
          "400": {
            "description": "Bad Request - Invalid bookmark ID supplied.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The request lacks valid authentication credentials."
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/bookmark/List": {
      "get": {
        "tags": [
          "Bookmark"
        ],
        "summary": "Retrieve a list of bookmarks",
        "description": "This endpoint allows users to retrieve a list of bookmarks associated with their account.\nThe user must be authenticated with a valid JWT bearer token.\n",
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of bookmarks.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookmarkDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed syntax.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The request lacks valid authentication credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/bookmark": {
      "get": {
        "tags": [
          "Bookmark"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/category/update": {
      "put": {
        "tags": [
          "Category"
        ],
        "summary": "Update fanfic category",
        "description": "This endpoint allows updating the category of a fanfic. It requires the ID of the fanfic (fanficId) and the new category name (categoryName) to be provided in the request headers. If the user is authorized and the specified fanfic and category exist, the fanfic's category will be updated accordingly.\n",
        "parameters": [
          {
            "name": "fanficId",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true,
            "description": "The ID of the fanfic to update its category."
          },
          {
            "name": "categoryName",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The new category name to assign to the fanfic."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryViewModelJsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryViewModelJsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryViewModelJsonResponseContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/category/fanficCategory": {
      "delete": {
        "tags": [
          "Category"
        ],
        "summary": "Delete fanfic category",
        "description": "This endpoint allows deleting a category from a fanfic. It requires the ID of the fanfic (fanficId) and the ID of the category (categoryId) to be provided in the request headers. If the user is authorized and the specified fanfic exists, the category associated with the fanfic will be removed.\n",
        "parameters": [
          {
            "name": "fanficId",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true,
            "description": "The ID of the fanfic from which to delete the category."
          },
          {
            "name": "categoryId",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true,
            "description": "The ID of the category to be deleted from the fanfic."
          }
        ],
        "responses": {
          "200": {
            "description": "The category has been successfully deleted from the fanfic. This response indicates that the operation completed without errors. The specified category has been removed from the fanfic."
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/category": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get all categories for a fanfic",
        "description": "This endpoint allows users to retrieve all categories associated with a specific fanfic.\nThe user must be authenticated with a valid JWT bearer token.\n",
        "parameters": [
          {
            "name": "fanficId",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true,
            "description": "The ID of the fanfic to retrieve categories for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of all categories associated with the fanfic.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request or parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The request lacks valid authentication credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/chapter/create": {
      "post": {
        "tags": [
          "Chapter"
        ],
        "summary": "Create a new chapter",
        "description": "This endpoint allows users to create a new chapter for a fanfic. The user must be authenticated\nwith a valid JWT bearer token.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChapterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChapterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChapterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The chapter was successfully created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterViewModelJsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterViewModelJsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterViewModelJsonResponseContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input data provided",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The user is not authorized to perform this action",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/chapter/update": {
      "put": {
        "tags": [
          "Chapter"
        ],
        "summary": "Update a chapter",
        "description": "This endpoint allows users to update a chapter of a fanfic.\nThe user must be authenticated with a valid JWT bearer token.\n",
        "parameters": [
          {
            "name": "chapterId",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true,
            "description": "The ID of the chapter to be updated."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChapterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChapterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChapterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chapter successfully updated.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterViewModelJsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterViewModelJsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterViewModelJsonResponseContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request or parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The request lacks valid authentication credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/chapter/delete": {
      "delete": {
        "tags": [
          "Chapter"
        ],
        "summary": "Delete a chapter",
        "description": "This endpoint allows users to delete a chapter of a fanfic.\nThe user must be authenticated with a valid JWT bearer token.\n",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true,
            "description": "The ID of the chapter to be deleted."
          }
        ],
        "responses": {
          "200": {
            "description": "Chapter successfully deleted."
          },
          "400": {
            "description": "Bad Request - Invalid request or parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The request lacks valid authentication credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/chapter/all": {
      "get": {
        "tags": [
          "Chapter"
        ],
        "summary": "Get all chapters",
        "description": "This endpoint retrieves all chapters of fanfics.\nThe user must be authenticated with a valid JWT bearer token.\n",
        "responses": {
          "200": {
            "description": "Success - Chapters retrieved successfully.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterViewModelJsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterViewModelJsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterViewModelJsonResponseContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request or parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The request lacks valid authentication credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/chapter/chapterById": {
      "get": {
        "tags": [
          "Chapter"
        ],
        "summary": "Get chapter by ID",
        "description": "This endpoint retrieves a chapter by its ID.\nThe user must be authenticated with a valid JWT bearer token.\n",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true,
            "description": "The ID of the chapter to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Success - Chapter retrieved successfully.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterViewModelJsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterViewModelJsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterViewModelJsonResponseContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request or parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The request lacks valid authentication credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/chapter/fanficChapter": {
      "get": {
        "tags": [
          "Chapter"
        ],
        "summary": "Get chapters by fanfic ID",
        "description": "This endpoint retrieves all chapters belonging to a specific fanfic, identified by its ID.\nThe user must be authenticated with a valid JWT bearer token.\n",
        "parameters": [
          {
            "name": "fanficId",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true,
            "description": "The ID of the fanfic for which chapters are to be retrieved."
          }
        ],
        "responses": {
          "200": {
            "description": "Success - Chapters retrieved successfully.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterViewModelJsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterViewModelJsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterViewModelJsonResponseContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request or parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The request lacks valid authentication credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/chapter": {
      "get": {
        "tags": [
          "Chapter"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/customizationUser/changeBannerImage": {
      "put": {
        "tags": [
          "Customization"
        ],
        "summary": "Change banner image for user customization settings",
        "description": "This endpoint allows users to change the banner image for their customization settings.\nThe user must be authenticated with a valid JWT bearer token.\n",
        "parameters": [
          {
            "name": "customizationSettingsId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true,
            "description": "The ID of the customization settings to update."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              },
              "example": "base64-encoded-string"
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              },
              "example": "base64-encoded-string"
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              },
              "example": "base64-encoded-string"
            }
          },
          "description": "The base64-encoded banner image to be uploaded."
        },
        "responses": {
          "200": {
            "description": "Success - Banner image changed successfully.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomUserSettingViewModelJsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomUserSettingViewModelJsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomUserSettingViewModelJsonResponseContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request or parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The request lacks valid authentication credentials."
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/customizationUser/getCustomizationSettings": {
      "get": {
        "tags": [
          "Customization"
        ],
        "summary": "Get customization settings for a user",
        "description": "This endpoint retrieves the customization settings for a specific user.\nThe user must be authenticated with a valid JWT bearer token.\n",
        "parameters": [
          {
            "name": "customizationSettingsId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true,
            "description": "The ID of the customization settings to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Success - Customization settings retrieved successfully.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomUserSettingViewModelJsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomUserSettingViewModelJsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomUserSettingViewModelJsonResponseContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request or parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The request lacks valid authentication credentials."
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/fanfic/create": {
      "post": {
        "tags": [
          "Fanfic"
        ],
        "summary": "Create a new fanfic",
        "description": "This endpoint allows users to create a new fanfic.\nThe user must be authenticated with a valid JWT bearer token.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success - Fanfic created successfully.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FanficViewModelJsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FanficViewModelJsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FanficViewModelJsonResponseContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request or parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The request lacks valid authentication credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/fanfic/update": {
      "put": {
        "tags": [
          "Fanfic"
        ],
        "summary": "Update an existing fanfic",
        "description": "This endpoint allows users to update an existing fanfic.\nThe user must be authenticated with a valid JWT bearer token.\n",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true,
            "description": "The ID of the fanfic to update."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success - Fanfic updated successfully.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FanficViewModelJsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FanficViewModelJsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FanficViewModelJsonResponseContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request or parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The request lacks valid authentication credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/fanfic/delete": {
      "delete": {
        "tags": [
          "Fanfic"
        ],
        "summary": "Delete a fanfic",
        "description": "This endpoint allows users to delete a fanfic by its ID.\nThe user must be authenticated with a valid JWT bearer token.\n",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": true,
            "description": "The ID of the fanfic to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "Success - Fanfic deleted successfully."
          },
          "400": {
            "description": "Bad Request - Invalid request or parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The request lacks valid authentication credentials.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/fanfic": {
      "get": {
        "tags": [
          "Fanfic"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/detail/lastCreationDateFanfics": {
      "get": {
        "tags": [
          "FanficDetail"
        ],
        "summary": "Get last creation date fanfics",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/detail/topRatingFanfics": {
      "get": {
        "tags": [
          "FanficDetail"
        ],
        "summary": "Get top rating fanfics",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/detail/ratingFanfic": {
      "get": {
        "tags": [
          "FanficDetail"
        ],
        "summary": "Rating fanfic",
        "parameters": [
          {
            "name": "fanficId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/detail/getAll": {
      "get": {
        "tags": [
          "FanficDetail"
        ],
        "summary": "Get all fanfic",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/detail/getById": {
      "get": {
        "tags": [
          "FanficDetail"
        ],
        "summary": "Get by id fanfic",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/detail/byAuthorName": {
      "get": {
        "tags": [
          "FanficDetail"
        ],
        "summary": "Get by Username",
        "parameters": [
          {
            "name": "authorName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/detail/search": {
      "get": {
        "tags": [
          "FanficDetail"
        ],
        "summary": "Search fanfic",
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originalFandom",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        }
      }
    },
    "/v1/detail": {
      "get": {
        "tags": [
          "FanficDetail"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/follower/List": {
      "get": {
        "tags": [
          "Follower"
        ],
        "summary": "Get list of followers",
        "description": "Retrieve a list of people who subscribe to the user.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/follower/Subscribe": {
      "put": {
        "tags": [
          "Follower"
        ],
        "summary": "Subscribe to a user",
        "description": "Subscribe to a user to receive updates from them.",
        "parameters": [
          {
            "name": "followerId",
            "in": "query",
            "description": "The ID of the user to subscribe to",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/follower/Unsubscribe": {
      "delete": {
        "tags": [
          "Follower"
        ],
        "summary": "Unsubscribe from a user",
        "description": "Unsubscribe from a user to stop receiving updates from them.",
        "parameters": [
          {
            "name": "followerId",
            "in": "query",
            "description": "The ID of the user to unsubscribe from",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "summary": "Unsubscribe from a user",
      "description": "Unsubscribe from a user to stop receiving updates from them.",
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "Bad Request",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "500": {
          "description": "Server Error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonResponseContainer"
              }
            }
          }
        }
      }
    },
    "/v1/follower": {
      "get": {
        "tags": [
          "Follower"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/friend/List": {
      "get": {
        "tags": [
          "Friend"
        ],
        "summary": "Return list of usernames in the friends list",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/friend/Add": {
      "post": {
        "tags": [
          "Friend"
        ],
        "summary": "Send a friend request by specifying username",
        "parameters": [
          {
            "name": "friendName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The username of the friend which gonna have request"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully added friend",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FriendRequestDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. The request could not be understood by the server due to malformed syntax.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The user is not authenticated to perform the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/friend/UserSend": {
      "get": {
        "tags": [
          "Friend"
        ],
        "summary": "Get friend requests sent by the user",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FriendRequestDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The user is not authenticated to perform the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/friend/Cancel": {
      "delete": {
        "tags": [
          "Friend"
        ],
        "summary": "Cancel a send request by username that get a request",
        "parameters": [
          {
            "name": "friendName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The username of the friend request to be canceled"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully canceled friend request"
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The user is not authenticated to perform the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/friend/SendToUser": {
      "get": {
        "tags": [
          "Friend"
        ],
        "summary": "Retrieve friend requests sent to the user",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FriendRequestDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The user is not authenticated to perform the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/friend/Accept": {
      "put": {
        "tags": [
          "Friend"
        ],
        "summary": "Accept a friend request",
        "parameters": [
          {
            "name": "friendName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The username of the friend request to be accepted"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully accepted friend request"
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The user is not authenticated to perform the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/friend/Remove": {
      "delete": {
        "tags": [
          "Friend"
        ],
        "summary": "Remove a friend from the user's friend list",
        "parameters": [
          {
            "name": "friendName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The username of the friend to be removed"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed friend"
          },
          "400": {
            "description": "Bad request. The request could not be understood by the server due to malformed syntax.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The user is not authenticated to perform the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "security": [
            {
              "bearer": []
            }
          ]
        }
      }
    },
    "/v1/friend": {
      "get": {
        "tags": [
          "Friend"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/profile/changeEmail": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Change user email",
        "description": "This endpoint changes the email address associated with the user's account. It requires the current email, the new email, and a verification token. If successful, the user's email will be updated to the new email address. Endpoint allows users to change their email address using a provided token for verification.\n",
        "parameters": [
          {
            "name": "Email",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "description": "Current email address of the user"
            }
          },
          {
            "name": "NewEmail",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "description": "New email address to be set for the user"
            }
          },
          {
            "name": "Token",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "description": "Token for email verification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email successfully changed"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        }
      }
    },
    "/v1/profile/changePassword": {
      "put": {
        "tags": [
          "Profile"
        ],
        "summary": "Change user password",
        "description": "This endpoint allows users to change their password after authentication.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordChangeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordChangeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordChangeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password successfully changed"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/profile/getProfile": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Get user profile information",
        "description": "This endpoint retrieves user profile information based on the provided username.\n",
        "parameters": [
          {
            "name": "userName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            },
            "description": "Username of the user whose profile information is to be retrieved"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LogInViewModelJsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogInViewModelJsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogInViewModelJsonResponseContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/profile": {
      "get": {
        "tags": [
          "Profile"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/review/create": {
      "post": {
        "tags": [
          "Review"
        ],
        "summary": "Create review",
        "parameters": [
          {
            "name": "fanficId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Upon successfully creating a review, the endpoint returns wigh the response body contains the details of the newly created review.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewViewModelJsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewViewModelJsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewViewModelJsonResponseContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/review/update": {
      "put": {
        "tags": [
          "Review"
        ],
        "summary": "Update review",
        "parameters": [
          {
            "name": "fanficId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "When updating a review is successful, the endpoint returns a response with status 200, indicating success. The response body contains the updated review details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewViewModelJsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewViewModelJsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewViewModelJsonResponseContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/review/delete": {
      "delete": {
        "tags": [
          "Review"
        ],
        "summary": "Delete review",
        "parameters": [
          {
            "name": "fanficId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "After successfully deleting a review, the endpoint returns wigh the response body may contain a message confirming the deletion.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewViewModelJsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewViewModelJsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewViewModelJsonResponseContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/review/all": {
      "get": {
        "tags": [
          "Review"
        ],
        "summary": "Get all review",
        "responses": {
          "200": {
            "description": "Upon successfully retrieving all reviews, the endpoint returns a response with status 200, indicating success. The response body contains a list of all reviews.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewViewModelJsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewViewModelJsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewViewModelJsonResponseContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/review/allUserReview": {
      "get": {
        "tags": [
          "Review"
        ],
        "summary": "Get all review by user",
        "parameters": [
          {
            "name": "userName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "hen retrieving all reviews by a specific user is successful, the endpoint returns a response with status 200, indicating success. The response body contains a list of reviews associated with the specified user.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewViewModelJsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewViewModelJsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewViewModelJsonResponseContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/review/allFanficReview": {
      "get": {
        "tags": [
          "Review"
        ],
        "summary": "Get all review by fanfic",
        "parameters": [
          {
            "name": "fanficId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "After successfully retrieving all reviews for a specific fanfic, the endpoint returns a response with status 200, indicating success. The response body contains a list of reviews associated with the specified fanfic.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewViewModelJsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewViewModelJsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewViewModelJsonResponseContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/review": {
      "get": {
        "tags": [
          "Review"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/tag/create": {
      "post": {
        "tags": [
          "Tag"
        ],
        "summary": "Create a new tag for a fanfic",
        "description": "This endpoint allows the creation of a new tag associated with a fanfic. \nA tag represents a descriptive label or keyword assigned to a fanfic for categorization or organization purposes.\n",
        "parameters": [
          {
            "name": "fanficId",
            "in": "query",
            "description": "The ID of the fanfic to associate the tag with",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TagModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TagModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tag created successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TagViewModelJsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagViewModelJsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagViewModelJsonResponseContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/tag/update": {
      "put": {
        "tags": [
          "Tag"
        ],
        "summary": "Update or set a tag for a fanfic",
        "description": "This endpoint allows updating or setting a tag for a fanfic. \nA tag represents a descriptive label or keyword assigned to a fanfic for categorization or organization purposes.\n",
        "parameters": [
          {
            "name": "fanficId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "nameTag",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tag successfully updated or set for the fanfic",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TagViewModelJsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagViewModelJsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagViewModelJsonResponseContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/tag/fanficTag": {
      "delete": {
        "tags": [
          "Tag"
        ],
        "summary": "Delete a tag from a fanfic",
        "description": "This endpoint allows deleting a tag from a fanfic. \nA tag represents a descriptive label or keyword assigned to a fanfic for categorization or organization purposes.\n",
        "parameters": [
          {
            "name": "fanficId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "tagName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tag successfully deleted from the fanfic",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TagViewModelJsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagViewModelJsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagViewModelJsonResponseContainer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Get all tags associated with a fanfic",
        "description": "This endpoint retrieves all tags associated with a specific fanfic.\nTags represent descriptive labels or keywords assigned to fanfics for categorization or organization purposes.\n",
        "parameters": [
          {
            "name": "fanficId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/tag/all": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Get all tags",
        "description": "This endpoint retrieves all tags available in the system.\nTags represent descriptive labels or keywords used for categorization or organization purposes.\n",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/tag/delete": {
      "delete": {
        "tags": [
          "Tag"
        ],
        "summary": "Delete a tag",
        "description": "This endpoint allows deleting a tag from the system.\nTags represent descriptive labels or keywords used for categorization or organization purposes.\n",
        "parameters": [
          {
            "name": "tagId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tag successfully deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonResponseContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonResponseContainer"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/tag": {
      "get": {
        "tags": [
          "Tag"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthModel": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "description": ""
      },
      "BanModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "days": {
            "type": "integer",
            "description": "",
            "format": "int32",
            "nullable": true
          }
        },
        "description": ""
      },
      "CategoryDto": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "fanficCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FanficCategoryDto"
            },
            "description": "",
            "nullable": true
          }
        },
        "description": ""
      },
      "CategoryViewModel": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "categoryName": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "description": ""
      },
      "CategoryViewModelJsonResponseContainer": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CategoryViewModel"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonResponseError"
            },
            "description": "",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "",
            "readOnly": true
          }
        },
        "description": ""
      },
      "ChangeRoleModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "newRole": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "description": ""
      },
      "ChapterModel": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "content": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "fanficId": {
            "type": "integer",
            "description": "",
            "format": "int32"
          }
        },
        "description": ""
      },
      "ChapterViewModel": {
        "type": "object",
        "properties": {
          "chapterId": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "fanficId": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "content": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "description": ""
      },
      "ChapterViewModelJsonResponseContainer": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ChapterViewModel"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonResponseError"
            },
            "description": "",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "",
            "readOnly": true
          }
        },
        "description": ""
      },
      "CreateModel": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "",
            "format": "byte",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "originFandom": {
            "type": "boolean",
            "description": "",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "stage": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          }
        },
        "description": ""
      },
      "CustomUserSettingViewModel": {
        "type": "object",
        "properties": {
          "customizationSettingsId": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "bannerImage": {
            "type": "string",
            "description": "",
            "format": "byte",
            "nullable": true
          },
          "customStickers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StickerViewModel"
            },
            "description": "",
            "nullable": true
          }
        },
        "description": ""
      },
      "CustomUserSettingViewModelJsonResponseContainer": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CustomUserSettingViewModel"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonResponseError"
            },
            "description": "",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "",
            "readOnly": true
          }
        },
        "description": ""
      },
      "FanficCategoryDto": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "categoryName": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "description": ""
      },
      "FanficTagDto": {
        "type": "object",
        "properties": {
          "tagId": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "tagName": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "isApproved": {
            "type": "boolean",
            "description": ""
          }
        },
        "description": ""
      },
      "FanficTagViewModel": {
        "type": "object",
        "properties": {
          "tagId": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "tagName": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "description": ""
      },
      "FanficViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "image": {
            "type": "string",
            "description": "",
            "format": "byte",
            "nullable": true
          },
          "authorName": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "originFandom": {
            "type": "boolean",
            "description": "",
            "nullable": true
          },
          "stage": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryDto"
            },
            "description": "",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagDto"
            },
            "description": "",
            "nullable": true
          }
        },
        "description": ""
      },
      "FanficViewModelJsonResponseContainer": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FanficViewModel"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonResponseError"
            },
            "description": "",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "",
            "readOnly": true
          }
        },
        "description": ""
      },
      "JsonResponseContainer": {
        "type": "object",
        "properties": {
          "data": {
            "description": "",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonResponseError"
            },
            "description": "",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "",
            "readOnly": true
          }
        },
        "description": ""
      },
      "JsonResponseError": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "description": ""
      },
      "LogInViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "token": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "role": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "whoBan": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "userAvatar": {
            "type": "string",
            "description": "",
            "format": "byte",
            "nullable": true
          },
          "lifeTimeToken": {
            "type": "string",
            "description": "",
            "format": "date-time"
          }
        },
        "description": ""
      },
      "LogInViewModelJsonResponseContainer": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/LogInViewModel"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonResponseError"
            },
            "description": "",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "",
            "readOnly": true
          }
        },
        "description": ""
      },
      "PasswordChangeModel": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "confirmPassword": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "description": ""
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": {},
        "description": ""
      },
      "RefreshTokenViewModel": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "description": ""
      },
      "RefreshTokenViewModelJsonResponseContainer": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RefreshTokenViewModel"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonResponseError"
            },
            "description": "",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "",
            "readOnly": true
          }
        },
        "description": ""
      },
      "RequestToChangeEmailModel": {
        "type": "object",
        "properties": {
          "newEmail": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "description": ""
      },
      "RequestToRestorePassModel": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "description": ""
      },
      "ReviewModel": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "rating": {
            "type": "number",
            "description": "",
            "format": "double"
          }
        },
        "description": ""
      },
      "ReviewViewModel": {
        "type": "object",
        "properties": {
          "reviewId": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "text": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "rating": {
            "type": "number",
            "description": "",
            "format": "double"
          },
          "creationDate": {
            "type": "string",
            "description": "",
            "format": "date-time"
          },
          "fanficId": {
            "type": "integer",
            "description": "",
            "format": "int32"
          }
        },
        "description": ""
      },
      "ReviewViewModelJsonResponseContainer": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReviewViewModel"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonResponseError"
            },
            "description": "",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "",
            "readOnly": true
          }
        },
        "description": ""
      },
      "StickerViewModel": {
        "type": "object",
        "properties": {
          "stickerId": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "stickerImage": {
            "type": "string",
            "description": "",
            "format": "byte",
            "nullable": true
          }
        },
        "description": ""
      },
      "TagDto": {
        "type": "object",
        "properties": {
          "tagId": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "isApproved": {
            "type": "boolean",
            "description": ""
          },
          "fanficTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FanficTagDto"
            },
            "description": "",
            "nullable": true
          }
        },
        "description": ""
      },
      "TagModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "description": ""
      },
      "TagViewModel": {
        "type": "object",
        "properties": {
          "tagId": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "isApproved": {
            "type": "boolean",
            "description": ""
          },
          "fanficTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FanficTagViewModel"
            },
            "description": "",
            "nullable": true
          }
        },
        "description": ""
      },
      "TagViewModelJsonResponseContainer": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagViewModel"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonResponseError"
            },
            "description": "",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "",
            "readOnly": true
          }
        },
        "description": ""
      },
      "UpdateModel": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "image": {
            "type": "string",
            "description": "",
            "format": "byte",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "originFandom": {
            "type": "boolean",
            "description": "",
            "nullable": true
          },
          "stage": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          }
        },
        "description": ""
      },
      "UserInfoViewModel": {
        "type": "object",
        "properties": {
          "isBanned": {
            "type": "boolean",
            "description": ""
          },
          "banExpirationDate": {
            "type": "string",
            "description": "",
            "format": "date-time",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "role": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "description": ""
      },
      "UserInfoViewModelJsonResponseContainer": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UserInfoViewModel"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonResponseError"
            },
            "description": "",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "",
            "readOnly": true
          }
        },
        "description": ""
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Set `Bearer ` before ur `Token`",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}