—
}C:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Repos\Interfaces\ITagRepository.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Repos  %
.% &

Interfaces& 0
{ 
public 

	interface 
ITagRepository #
{ 
Task 
< 
Tag 
> 
GetByNameAsync  
(  !
string! '
?' (
name) -
)- .
;. /
Task		 
<		 
TagDto		 
>		 
CreateAsync		  
(		  !
TagDto		! '
tag		( +
)		+ ,
;		, -
Task

 
UpdateAsync

 
(

 
TagDto

 
tag

  #
)

# $
;

$ %
Task 
DeleteAsync 
( 
int 
id 
)  
;  !
Task 
< 
List 
< 
TagDto 
> 
> 
GetNotApprovedTags -
(- .
). /
;/ 0
Task 
< 
List 
< 
Tag 
> 
> 
GetAllAsync #
(# $
)$ %
;% &
Task 
< 
TagDto 
> 
GetByIdAsync !
(! "
int" %
id& (
)( )
;) *
Task 
AddTagToFanficAsync  
(  !
int! $
fanficId% -
,- .
int/ 2
tagId3 8
)8 9
;9 :
Task 
< 
TagDto 
> !
GetTagByFanficIdAsync *
(* +
int+ .
fanficId/ 7
,7 8
int9 <
tagId= B
)B C
;C D
Task 
< 
List 
< 
TagDto 
> 
> "
GetTagsByFanficIdAsync 1
(1 2
int2 5
fanficId6 >
)> ?
;? @
Task $
DeleteTagFromFanficAsync %
(% &
int& )
fanficId* 2
,2 3
string4 :
?: ;
tagName< C
)C D
;D E
Task 
< 
bool 
> 

ApproveTag 
( 
int !
tagId" '
)' (
;( )
} 
} ï#
ÄC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Repos\Interfaces\IFanficRepository.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Repos  %
.% &

Interfaces& 0
{ 
public 

	interface 
IFanficRepository &
{ 
Task 
< 
	FanficDto 
> 
GetByIdAsync $
($ %
int% (
id) +
)+ ,
;, -
Task		 
<		 
List		 
<		 
	FanficDto		 
>		 
>		  
GetByAuthorNameAsync		 2
(		2 3
string		3 9
name		: >
,		> ?
int		@ C
count		D I
)		I J
;		J K
Task

 
<

 
List

 
<

 
	FanficDto

 
>

 
>

 
GetAllAsync

 )
(

) *
int

* -
count

. 3
)

3 4
;

4 5
Task 
< 
List 
< 
	FanficDto 
> 
> 
LocalGetAllAsync .
(. /
)/ 0
;0 1
Task 
< 
List 
< 
	FanficDto 
> 
> +
GetLastCreationDateFanficsAsync =
(= >
int> A
countB G
)G H
;H I
Task 
< 
List 
< 
	FanficDto 
> 
> $
GetTopRatingFanficsAsync 6
(6 7
int7 :
count; @
)@ A
;A B
Task 
< 
	FanficDto 
> 
CreateAsync #
(# $
	CreateDto$ -
fanfic. 4
)4 5
;5 6
Task 
UpdateAsync 
( 
	UpdateDto "
fanfic# )
,) *
int+ .
fanficId/ 7
)7 8
;8 9
Task 
DeleteAsync 
( 
int 
id 
)  
;  !
Task 
< 
List 
< 
	FanficDto 
> 
> 
SearchAsync )
() *
string* 0
searchString1 =
,= >
bool? C
originalFandomD R
)R S
;S T
Task 
< 

ReviewsDto 
> 
CreateReviewAsync *
(* +
int+ .
fanficId/ 7
,7 8

ReviewsDto9 C

reviewsDtoD N
)N O
;O P
Task 
< 

ReviewsDto 
> 
UpdateReviewAsync *
(* +
int+ .
fanficId/ 7
,7 8

ReviewsDto9 C

reviewsDtoD N
)N O
;O P
Task 
DeleteReviewAsync 
( 
int "
fanficId# +
,+ ,
string- 3
userName4 <
)< =
;= >
Task 
< 

ReviewsDto 
> $
GetReviewByFanficIdAsync 1
(1 2
int2 5
fanficId6 >
,> ?
string@ F
userNameG O
)O P
;P Q
Task 
< 
List 
< 

ReviewsDto 
> 
> '
GetAllReviewByFanficIdAsync :
(: ;
int; >
fanficId? G
)G H
;H I
Task   
<   
List   
<   

ReviewsDto   
>   
>   '
GetAllReviewByUserNameAsync   :
(  : ;
string  ; A
userName  B J
)  J K
;  K L
Task"" 
<"" 
List"" 
<"" 

ReviewsDto"" 
>"" 
>"" 
GetAllReview"" +
(""+ ,
)"", -
;""- .
Task$$ 
<$$ 
double$$ 
>$$ !
GetAverageRatingAsync$$ *
($$* +
int$$+ .
fanficId$$/ 7
)$$7 8
;$$8 9
Task%% 
SaveChangesAsync%% 
(%% 
)%% 
;%%  
}&& 
}'' û
ÖC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Repos\Interfaces\IFanficPhotoRepository.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Repos  %
.% &

Interfaces& 0
{ 
public 

	interface "
IFanficPhotoRepository +
{ 
Task 
CreateAsync 
( 
FanficPhotoDto '
fanficPhoto( 3
)3 4
;4 5
Task 
DeleteAsync 
( 
int 
id 
)  
;  !
Task		 
UpdateAsync		 
(		 
FanficPhotoDto		 '
fanficPhoto		( 3
)		3 4
;		4 5
Task 
< 
FanficPhotoDto 
? 
> 
GetByIdAsync *
(* +
int+ .
id/ 1
)1 2
;2 3
} 
} Á
ÅC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Repos\Interfaces\ICommentRepository.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Repos  %
.% &

Interfaces& 0
;0 1
public 
	interface 
ICommentRepository #
{ 
Task 
< 	

CommentDto	 
> 
AddCommentAsync $
($ %

CommentDto% /

commentDto0 :
): ;
;; <
Task 
< 	

CommentDto	 
> 
UpdateCommentAsync '
(' (

CommentDto( 2

commentDto3 =
)= >
;> ?
Task		 
DeleteCommentAsync			 
(		 
int		 
id		  "
)		" #
;		# $
Task

 
<

 	

CommentDto

	 
>

 &
GetCommentByCommentIdAsync

 /
(

/ 0
int

0 3
id

4 6
,

6 7
string

8 >

authorName

? I
)

I J
;

J K
Task 
< 	
List	 
< 

CommentDto 
> 
> &
GetCommentsByFanficIdAsync 5
(5 6
int6 9
fanficId: B
)B C
;C D
Task 
< 	

CommentDto	 
> 
ReplyCommentAsync &
(' (

CommentDto( 2

commentDto3 =
)= >
;> ?
} „
ÜC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Repos\Interfaces\ICommentPhotoRepository.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Repos  %
.% &

Interfaces& 0
{ 
public 

	interface #
ICommentPhotoRepository ,
{ 
Task 
CreateAsync 
( 
CommentPhotoDto (
fanficComment) 6
)6 7
;7 8
Task 
DeleteAsync 
( 
int 
id 
)  
;  !
Task		 
UpdateAsync		 
(		 
CommentPhotoDto		 (
fanficComment		) 6
)		6 7
;		7 8
}

 
} ﬁ
ÅC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Repos\Interfaces\IChapterRepository.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Repos  %
.% &

Interfaces& 0
;0 1
public 
	interface 
IChapterRepository #
{ 
Task 
< 	

ChapterDto	 
> 
CreateAsync  
(  !

ChapterDto! +
chapter, 3
)3 4
;4 5
Task		 
DeleteAsync			 
(		 
int		 
id		 
)		 
;		 
Task

 
<

 	

ChapterDto

	 
>

 
UpdateAsync

  
(

  !

ChapterDto

! +
chapter

, 3
)

3 4
;

4 5
Task 
< 	
Chapter	 
? 
> 
GetByIdAsync 
(  
int  #
id$ &
)& '
;' (
Task 
< 	
List	 
< 
Chapter 
> 
> 
GetAllAsync #
(# $
)$ %
;% &
Task 
< 	
List	 
< 
Chapter 
> 
> !
GetAllByFanficIdAsync -
(- .
int. 1
fanficId2 :
): ;
;; <
Task 
SaveChangesAsync	 
( 
) 
; 
} Ï
ÇC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Repos\Interfaces\ICategoryRepository.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Repos  %
.% &

Interfaces& 0
{ 
public 

	interface 
ICategoryRepository (
{ 
Task 
< 
CategoryDto 
> 
GetByNameAsync (
(( )
string) /
name0 4
)4 5
;5 6
Task 
< 
List 
< 
CategoryDto 
> 
> 
GetAllAsync  +
(+ ,
), -
;- .
Task		 $
AddCategoryToFanficAsync		 %
(		% &
int		& )
fanficId		* 2
,		2 3
int		4 7

categoryId		8 B
)		B C
;		C D
Task

 
<

 
CategoryDto

 
>

 
GetByIdAsync

 &
(

& '
int

' *
id

+ -
)

- .
;

. /
Task )
DeleteCategoryFromFanficAsync *
(* +
int+ .
fanficId/ 7
,7 8
int9 <

categoryId= G
)G H
;H I
Task 
< 
CategoryDto 
> &
GetCategoryByFanficIdAsync 4
(4 5
int5 8
fanficId9 A
,A B
intC F

categoryIdG Q
)Q R
;R S
Task 
< 
List 
< 
CategoryDto 
> 
> )
GetAllCategoryByFanficIdAsync  =
(= >
int> A
fanficIdB J
)J K
;K L
} 
} „S
vC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Repos\Impl\TagRepository.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Repos  %
.% &
Impl& *
;* +
public

 
class

 
TagRepository

 
:

 
RepositoryBase

 +
<

+ ,
Tag

, /
>

/ 0
,

0 1
ITagRepository

2 @
{ 
private 
readonly 
FanficContext "
_context# +
;+ ,
private 
readonly 
IMapper 
_mapper $
;$ %
public 

TagRepository 
( 
FanficContext &
context' .
,. /
IMapper0 7
mapper8 >
)> ?
:@ A
baseB F
(F G
contextG N
)N O
{ 
_context 
= 
context 
; 
_mapper 
= 
mapper 
; 
} 
public 

async 
Task 
< 
Tag 
> 
GetByNameAsync )
() *
string* 0
?0 1
name2 6
)6 7
{ 
return 
await 
_context 
. 
Tags "
." #
Where# (
(( )
x) *
=>+ -
x. /
./ 0
Name0 4
==5 7
name8 <
)< =
.= >
FirstOrDefaultAsync> Q
(Q R
)R S
;S T
} 
public 

async 
Task 
< 
TagDto 
> 
GetByIdAsync *
(* +
int+ .
id/ 1
)1 2
{ 
var 
tag 
= 
await 
_context  
.  !
Tags! %
.% &
	FindAsync& /
(/ 0
id0 2
)2 3
;3 4
return 
_mapper 
. 
Map 
< 
TagDto !
>! "
(" #
tag# &
)& '
;' (
} 
public!! 

async!! 
Task!! 
<!! 
List!! 
<!! 
Tag!! 
>!! 
>!!  
GetAllAsync!!! ,
(!!, -
)!!- .
{"" 
return## 
await## 
_context## 
.## 
Tags## "
.##" #
ToListAsync### .
(##. /
)##/ 0
;##0 1
}$$ 
public&& 

async&& 
Task&& 
<&& 
TagDto&& 
>&& 
CreateAsync&& )
(&&) *
TagDto&&* 0
tag&&1 4
)&&4 5
{'' 
var(( 
	tagEntity(( 
=(( 
_mapper(( 
.((  
Map((  #
<((# $
Tag(($ '
>((' (
(((( )
tag(() ,
)((, -
;((- .
await)) 
_context)) 
.)) 
Tags)) 
.)) 
AddAsync)) $
())$ %
	tagEntity))% .
))). /
;))/ 0
await** 
_context** 
.** 
SaveChangesAsync** '
(**' (
)**( )
;**) *
return,, 
_mapper,, 
.,, 
Map,, 
<,, 
TagDto,, !
>,,! "
(,," #
	tagEntity,,# ,
),,, -
;,,- .
}-- 
public// 

async// 
Task// 
UpdateAsync// !
(//! "
TagDto//" (
tag//) ,
)//, -
{00 
var11 
	tagEntity11 
=11 
_mapper11 
.11  
Map11  #
<11# $
Tag11$ '
>11' (
(11( )
tag11) ,
)11, -
;11- .
_context22 
.22 
Tags22 
.22 
Update22 
(22 
	tagEntity22 &
)22& '
;22' (
await33 
_context33 
.33 
SaveChangesAsync33 '
(33' (
)33( )
;33) *
}44 
public66 

async66 
Task66 
DeleteAsync66 !
(66! "
int66" %
id66& (
)66( )
{77 
var88 
tag88 
=88 
await88 
_context88  
.88  !
Tags88! %
.88% &
	FindAsync88& /
(88/ 0
id880 2
)882 3
;883 4
_context99 
.99 
Tags99 
.99 
Remove99 
(99 
tag99  
)99  !
;99! "
await:: 
_context:: 
.:: 
SaveChangesAsync:: '
(::' (
)::( )
;::) *
};; 
public== 

async== 
Task== 
AddTagToFanficAsync== )
(==) *
int==* -
fanficId==. 6
,==6 7
int==8 ;
tagId==< A
)==A B
{>> 
var?? 
	fanficTag?? 
=?? 
new?? 
	FanficTag?? %
{??& '
FanficId??( 0
=??1 2
fanficId??3 ;
,??; <
TagId??= B
=??C D
tagId??E J
}??K L
;??L M
await@@ 
_context@@ 
.@@ 

FanficTags@@ !
.@@! "
AddAsync@@" *
(@@* +
	fanficTag@@+ 4
)@@4 5
;@@5 6
awaitAA 
_contextAA 
.AA 
SaveChangesAsyncAA '
(AA' (
)AA( )
;AA) *
}BB 
publicDD 

asyncDD 
TaskDD $
DeleteTagFromFanficAsyncDD .
(DD. /
intDD/ 2
fanficIdDD3 ;
,DD; <
stringDD= C
?DDC D
tagNameDDE L
)DDL M
{EE 
varFF 
	fanficTagFF 
=FF 
awaitGG 
_contextGG 
.GG 

FanficTagsGG %
.GG% &
FirstOrDefaultAsyncGG& 9
(GG9 :
xGG: ;
=>GG< >
xGG? @
.GG@ A
FanficIdGGA I
==GGJ L
fanficIdGGM U
&&GGV X
xGGY Z
.GGZ [
TagGG[ ^
.GG^ _
NameGG_ c
==GGd f
tagNameGGg n
)GGn o
;GGo p
_contextHH 
.HH 

FanficTagsHH 
.HH 
RemoveHH "
(HH" #
	fanficTagHH# ,
)HH, -
;HH- .
awaitII 
_contextII 
.II 
SaveChangesAsyncII '
(II' (
)II( )
;II) *
}JJ 
publicLL 

asyncLL 
TaskLL 
<LL 
boolLL 
>LL 

ApproveTagLL &
(LL& '
intLL' *
tagIdLL+ 0
)LL0 1
{MM 
varNN 
tagNN 
=NN 
awaitNN 
_contextNN  
.NN  !
TagsNN! %
.NN% &
FirstOrDefaultAsyncNN& 9
(NN9 :
xNN: ;
=>NN< >
xNN? @
.NN@ A
TagIdNNA F
==NNG I
tagIdNNJ O
)NNO P
;NNP Q
tagOO 
.OO 

IsApprovedOO 
=OO 
trueOO 
;OO 
awaitPP 
_contextPP 
.PP 
SaveChangesAsyncPP '
(PP' (
)PP( )
;PP) *
returnQQ 
trueQQ 
;QQ 
}RR 
publicTT 

asyncTT 
TaskTT 
<TT 
TagDtoTT 
>TT !
GetTagByFanficIdAsyncTT 3
(TT3 4
intTT4 7
fanficIdTT8 @
,TT@ A
intTTB E
tagIdTTF K
)TTK L
{UU 
varVV 
tagVV 
=VV 
awaitVV 
_contextVV  
.VV  !

FanficTagsVV! +
.VV+ ,
FirstOrDefaultAsyncVV, ?
(VV? @
xVV@ A
=>VVB D
xVVE F
.VVF G
FanficIdVVG O
==VVP R
fanficIdVVS [
&&VV\ ^
xVV_ `
.VV` a
TagIdVVa f
==VVg i
tagIdVVj o
)VVo p
;VVp q
returnWW 
_mapperWW 
.WW 
MapWW 
<WW 
TagDtoWW !
>WW! "
(WW" #
tagWW# &
)WW& '
;WW' (
}XX 
publicZZ 

asyncZZ 
TaskZZ 
<ZZ 
ListZZ 
<ZZ 
TagDtoZZ !
>ZZ! "
>ZZ" #"
GetTagsByFanficIdAsyncZZ$ :
(ZZ: ;
intZZ; >
fanficIdZZ? G
)ZZG H
{[[ 
var\\ 
tags\\ 
=\\ 
await\\ 
_context\\ !
.\\! "

FanficTags\\" ,
.\\, -
Where\\- 2
(\\2 3
x\\3 4
=>\\5 7
x\\8 9
.\\9 :
FanficId\\: B
==\\C E
fanficId\\F N
)\\N O
.\\O P
Select\\P V
(\\V W
x\\W X
=>\\Y [
x\\\ ]
.\\] ^
Tag\\^ a
)\\a b
.\\b c
ToListAsync\\c n
(\\n o
)\\o p
;\\p q
return]] 
_mapper]] 
.]] 
Map]] 
<]] 
List]] 
<]]  
TagDto]]  &
>]]& '
>]]' (
(]]( )
tags]]) -
)]]- .
;]]. /
}^^ 
public`` 

async`` 
Task`` 
<`` 
List`` 
<`` 
TagDto`` !
>``! "
>``" #
GetNotApprovedTags``$ 6
(``6 7
)``7 8
{aa 
varbb 
tagsbb 
=bb 
awaitbb 
_contextbb !
.bb! "
Tagsbb" &
.bb& '
Wherebb' ,
(bb, -
xbb- .
=>bb/ 1
xbb2 3
.bb3 4

IsApprovedbb4 >
==bb? A
falsebbB G
)bbG H
.bbH I
ToListAsyncbbI T
(bbT U
)bbU V
;bbV W
returncc 
_mappercc 
.cc 
Mapcc 
<cc 
Listcc 
<cc  
TagDtocc  &
>cc& '
>cc' (
(cc( )
tagscc) -
)cc- .
;cc. /
}dd 
}ee ò
wC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Repos\Impl\RepositoryBase.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Repos  %
.% &
Impl& *
{ 
public 

class 
RepositoryBase 
<  
T  !
>! "
where# (
T) *
:+ ,
class- 2
,2 3
IEntity4 ;
{ 
	protected 
FanficContext 
_context  (
;( )
	protected

 
RepositoryBase

  
(

  !
FanficContext

! .
context

/ 6
)

6 7
{ 	
_context 
= 
context 
; 
} 	
public 
virtual 
T 
[ 
] 
GetAll !
(! "
)" #
{ 	
return 
_context 
. 
Set 
<  
T  !
>! "
(" #
)# $
.$ %
ToArray% ,
(, -
)- .
;. /
} 	
public 
virtual 
T 
GetById  
(  !
int! $
id% '
)' (
{ 	
return 
_context 
. 
Set 
<  
T  !
>! "
(" #
)# $
.$ %
Find% )
() *
id* ,
), -
;- .
} 	
public 
virtual 
void 
Update "
(" #
T# $
entity% +
)+ ,
{ 	
_context 
. 
Set 
< 
T 
> 
( 
) 
. 
Update $
($ %
entity% +
)+ ,
;, -
_context 
. 
SaveChanges  
(  !
)! "
;" #
} 	
public 
virtual 
void 
Add 
(  
T  !
entity" (
)( )
{   	
_context!! 
.!! 
Set!! 
<!! 
T!! 
>!! 
(!! 
)!! 
.!! 
Add!! !
(!!! "
entity!!" (
)!!( )
;!!) *
_context"" 
."" 
SaveChanges""  
(""  !
)""! "
;""" #
}## 	
public%% 
virtual%% 
void%% 
Delete%% "
(%%" #
T%%# $
entity%%% +
)%%+ ,
{&& 	
_context'' 
.'' 
Set'' 
<'' 
T'' 
>'' 
('' 
)'' 
.'' 
Remove'' $
(''$ %
entity''% +
)''+ ,
;'', -
_context(( 
.(( 
SaveChanges((  
(((  !
)((! "
;((" #
})) 	
}** 
}++ ¥∏
yC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Repos\Impl\FanficRepository.cs
	namespace		 	
FanPage		
 
.		 
Domain		 
.		 
Fanfic		 
.		  
Repos		  %
.		% &
Impl		& *
;		* +
public 
class 
FanficRepository 
: 
RepositoryBase  .
<. /
Entities/ 7
.7 8
Fanfic8 >
>> ?
,? @
IFanficRepositoryA R
{ 
private 
readonly 
FanficContext "
_fanficContext# 1
;1 2
private 
readonly 
IMapper 
_mapper $
;$ %
public 

FanficRepository 
( 
FanficContext )
fanficContext* 7
,7 8
IMapper9 @
mapperA G
)G H
:I J
baseK O
(O P
fanficContext 
) 
{ 
_fanficContext 
= 
fanficContext &
;& '
_mapper 
= 
mapper 
; 
} 
public 

async 
Task 
< 
double 
> !
GetAverageRatingAsync 3
(3 4
int4 7
fanficId8 @
)@ A
{ 
var 
reviews 
= 
await 
_fanficContext *
.* +
Reviews+ 2
.2 3
Where3 8
(8 9
x9 :
=>; =
x> ?
.? @
FanficId@ H
==I K
fanficIdL T
)T U
.U V
ToListAsyncV a
(a b
)b c
;c d
return 
reviews 
. 
Average 
( 
x  
=>! #
x$ %
.% &
Rating& ,
), -
;- .
} 
public 

async 
Task 
< 
	FanficDto 
>  
GetByIdAsync! -
(- .
int. 1
id2 4
)4 5
{ 
var   
fanfic   
=   
await   
_fanficContext   )
.  ) *
Fanfic  * 0
.!! 
Include!! 
(!! 
f!! 
=>!! 
f!! 
.!! 
FanficCategories!! ,
)!!, -
."" 
ThenInclude"" 
("" 
fc"" 
=>"" 
fc"" !
.""! "
Category""" *
)""* +
.## 
Include## 
(## 
f## 
=>## 
f## 
.## 

FanficTags## &
)##& '
.$$ 
ThenInclude$$ 
($$ 
ft$$ 
=>$$ 
ft$$ !
.$$! "
Tag$$" %
)$$% &
.%% 
Include%% 
(%% 
f%% 
=>%% 
f%% 
.%% 
Chapters%% $
)%%$ %
.&& 
Include&& 
(&& 
ft&& 
=>&& 
ft&& 
.&& 
Reviews&& %
)&&% &
.&&& '
Include&&' .
(&&. /
fanfic&&/ 5
=>&&6 8
fanfic&&9 ?
.&&? @
Photos&&@ F
)&&F G
.'' 
FirstOrDefaultAsync''  
(''  !
f''! "
=>''# %
f''& '
.''' (
FanficId''( 0
==''1 3
id''4 6
)''6 7
??''8 :
throw''; @
new''A D
FanficException''E T
(''T U
$str''U g
)''g h
;''h i
return))  
MapFanficEntityToDto)) #
())# $
fanfic))$ *
)))* +
;))+ ,
}** 
public,, 

async,, 
Task,, 
<,, 
List,, 
<,, 
	FanficDto,, $
>,,$ %
>,,% & 
GetByAuthorNameAsync,,' ;
(,,; <
string,,< B
name,,C G
,,,G H
int,,I L
count,,M R
),,R S
{-- 
var.. 
fanficEntities.. 
=.. 
await.. "
_fanficContext..# 1
...1 2
Fanfic..2 8
.// 
Include// 
(// 
f// 
=>// 
f// 
.// 
FanficCategories// ,
)//, -
.00 
ThenInclude00 
(00 
fc00 
=>00 
fc00 !
.00! "
Category00" *
)00* +
.11 
Include11 
(11 
f11 
=>11 
f11 
.11 

FanficTags11 &
)11& '
.22 
ThenInclude22 
(22 
ft22 
=>22 
ft22 !
.22! "
Tag22" %
)22% &
.33 
Include33 
(33 
f33 
=>33 
f33 
.33 
Chapters33 $
)33$ %
.44 
Include44 
(44 
f44 
=>44 
f44 
.44 
Reviews44 #
)44# $
.55 
Include55 
(55 
f55 
=>55 
f55 
.55 
Photos55 "
)55" #
.66 
Take66 
(66 
count66 
)66 
.77 
Where77 
(77 
w77 
=>77 
w77 
.77 

AuthorName77 $
==77% '
name77( ,
)77, -
.77- .
ToListAsync77. 9
(779 :
)77: ;
;77; <
return99 
fanficEntities99 
.99 
Select99 $
(99$ % 
MapFanficEntityToDto99% 9
)999 :
.99: ;
ToList99; A
(99A B
)99B C
;99C D
}:: 
public<< 

async<< 
Task<< 
<<< 
List<< 
<<< 
	FanficDto<< $
><<$ %
><<% &
GetAllAsync<<' 2
(<<2 3
int<<3 6
count<<7 <
)<<< =
{== 
var>> 
fanficEntities>> 
=>> 
await>> "
_fanficContext>># 1
.>>1 2
Fanfic>>2 8
.?? 
Include?? 
(?? 
f?? 
=>?? 
f?? 
.?? 
FanficCategories?? ,
)??, -
.@@ 
ThenInclude@@ 
(@@ 
fc@@ 
=>@@ 
fc@@ !
.@@! "
Category@@" *
)@@* +
.AA 
IncludeAA 
(AA 
fAA 
=>AA 
fAA 
.AA 

FanficTagsAA &
)AA& '
.BB 
ThenIncludeBB 
(BB 
ftBB 
=>BB 
ftBB !
.BB! "
TagBB" %
)BB% &
.CC 
IncludeCC 
(CC 
fCC 
=>CC 
fCC 
.CC 
ChaptersCC $
)CC$ %
.DD 
IncludeDD 
(DD 
fDD 
=>DD 
fDD 
.DD 
PhotosDD "
)DD" #
.EE 
IncludeEE 
(EE 
fEE 
=>EE 
fEE 
.EE 
ReviewsEE #
)EE# $
.FF 
TakeFF 
(FF 
countFF 
)FF 
.GG 
ToListAsyncGG 
(GG 
)GG 
;GG 
returnII 
fanficEntitiesII 
.II 
SelectII $
(II$ % 
MapFanficEntityToDtoII% 9
)II9 :
.II: ;
ToListII; A
(IIA B
)IIB C
;IIC D
}JJ 
publicLL 

asyncLL 
TaskLL 
<LL 
ListLL 
<LL 
	FanficDtoLL $
>LL$ %
>LL% &
LocalGetAllAsyncLL' 7
(LL7 8
)LL8 9
{MM 
varNN 
fanficEntitiesNN 
=NN 
awaitNN "
_fanficContextNN# 1
.NN1 2
FanficNN2 8
.OO 
IncludeOO 
(OO 
fOO 
=>OO 
fOO 
.OO 
FanficCategoriesOO ,
)OO, -
.PP 
ThenIncludePP 
(PP 
fcPP 
=>PP 
fcPP !
.PP! "
CategoryPP" *
)PP* +
.QQ 
IncludeQQ 
(QQ 
fQQ 
=>QQ 
fQQ 
.QQ 

FanficTagsQQ &
)QQ& '
.RR 
ThenIncludeRR 
(RR 
ftRR 
=>RR 
ftRR !
.RR! "
TagRR" %
)RR% &
.SS 
IncludeSS 
(SS 
fSS 
=>SS 
fSS 
.SS 
ChaptersSS $
)SS$ %
.TT 
IncludeTT 
(TT 
fTT 
=>TT 
fTT 
.TT 
PhotosTT "
)TT" #
.UU 
IncludeUU 
(UU 
fUU 
=>UU 
fUU 
.UU 
ReviewsUU #
)UU# $
.VV 
ToListAsyncVV 
(VV 
)VV 
;VV 
returnXX 
fanficEntitiesXX 
.XX 
SelectXX $
(XX$ % 
MapFanficEntityToDtoXX% 9
)XX9 :
.XX: ;
ToListXX; A
(XXA B
)XXB C
;XXC D
}YY 
public[[ 

async[[ 
Task[[ 
<[[ 
	FanficDto[[ 
>[[  
CreateAsync[[! ,
([[, -
	CreateDto[[- 6
	fanficDto[[7 @
)[[@ A
{\\ 
var]] 
fanficEntity]] 
=]] 
new]] 
Entities]] '
.]]' (
Fanfic]]( .
{^^ 	

AuthorName__ 
=__ 
	fanficDto__ "
.__" #

AuthorName__# -
,__- .
Title`` 
=`` 
	fanficDto`` 
.`` 
Title`` #
,``# $
Descriptionaa 
=aa 
	fanficDtoaa #
.aa# $
Descriptionaa$ /
,aa/ 0
OriginFandombb 
=bb 
	fanficDtobb $
.bb$ %
OriginFandombb% 1
,bb1 2
Stagecc 
=cc 
	fanficDtocc 
.cc 
Stagecc #
!cc# $
,cc$ %
Languagedd 
=dd 
	fanficDtodd  
.dd  !
Languagedd! )
!dd) *
,dd* +
CreationDateee 
=ee 
DateTimeOffsetee )
.ee) *
UtcNowee* 0
,ee0 1
Photosff 
=ff 
newff 
Listff 
<ff 
FanficPhotoff )
>ff) *
(ff* +
)ff+ ,
,ff, -
}gg 	
;gg	 

varii 
createdFanficii 
=ii 
awaitii !
_fanficContextii" 0
.ii0 1
Fanficii1 7
.ii7 8
AddAsyncii8 @
(ii@ A
fanficEntityiiA M
)iiM N
;iiN O
awaitjj 
_fanficContextjj 
.jj 
SaveChangesAsyncjj -
(jj- .
)jj. /
;jj/ 0
returnll  
MapFanficEntityToDtoll #
(ll# $
createdFanficll$ 1
.ll1 2
Entityll2 8
)ll8 9
;ll9 :
}mm 
publicpp 

asyncpp 
Taskpp 
UpdateAsyncpp !
(pp! "
	UpdateDtopp" +
updatepp, 2
,pp2 3
intpp4 7
fanficIdpp8 @
)pp@ A
{qq 
varrr 
fanficrr 
=rr 
awaitrr 
_fanficContextrr )
.rr) *
Fanficrr* 0
.rr0 1
Includerr1 8
(rr8 9
frr9 :
=>rr; =
frr> ?
.rr? @
Photosrr@ F
)rrF G
.ss 
FirstOrDefaultAsyncss  
(ss  !
fss! "
=>ss# %
fss& '
.ss' (
FanficIdss( 0
==ss1 3
fanficIdss4 <
)ss< =
;ss= >
_mapperuu 
.uu 
Mapuu 
(uu 
updateuu 
,uu 
fanficuu "
)uu" #
;uu# $
fanficvv 
!vv 
.vv 
CreationDatevv 
=vv 
DateTimeOffsetvv -
.vv- .
UtcNowvv. 4
;vv4 5
ifxx 

(xx 
fanficxx 
.xx 
Photosxx 
!=xx 
nullxx !
)xx! "
{yy 	
_fanficContextzz 
.zz 
FanficPhotoszz '
.zz' (
RemoveRangezz( 3
(zz3 4
fanficzz4 :
.zz: ;
Photoszz; A
)zzA B
;zzB C
await{{ 
_fanficContext{{  
.{{  !
SaveChangesAsync{{! 1
({{1 2
){{2 3
;{{3 4
}|| 	
if~~ 

(~~ 
fanfic~~ 
.~~ 
Photos~~ 
==~~ 
null~~ !
)~~! "
{ 	
fanfic
ÄÄ 
.
ÄÄ 
Photos
ÄÄ 
=
ÄÄ 
new
ÄÄ 
List
ÄÄ  $
<
ÄÄ$ %
FanficPhoto
ÄÄ% 0
>
ÄÄ0 1
(
ÄÄ1 2
)
ÄÄ2 3
;
ÄÄ3 4
}
ÅÅ 	
if
ÉÉ 

(
ÉÉ 
update
ÉÉ 
.
ÉÉ 
Photo
ÉÉ 
!=
ÉÉ 
null
ÉÉ  
)
ÉÉ  !
{
ÑÑ 	
foreach
ÖÖ 
(
ÖÖ 
var
ÖÖ 
photo
ÖÖ 
in
ÖÖ !
update
ÖÖ" (
.
ÖÖ( )
Photo
ÖÖ) .
)
ÖÖ. /
{
ÜÜ 
fanfic
áá 
.
áá 
Photos
áá 
.
áá 
Add
áá !
(
áá! "
new
áá" %
FanficPhoto
áá& 1
{
áá2 3
FanficId
áá4 <
=
áá= >
fanficId
áá? G
,
ááG H
Image
ááI N
=
ááO P
photo
ááQ V
.
ááV W
Image
ááW \
}
áá] ^
)
áá^ _
;
áá_ `
}
àà 
}
ââ 	
await
ãã 
_fanficContext
ãã 
.
ãã 
SaveChangesAsync
ãã -
(
ãã- .
)
ãã. /
;
ãã/ 0
}
åå 
public
èè 

async
èè 
Task
èè 
DeleteAsync
èè !
(
èè! "
int
èè" %
id
èè& (
)
èè( )
{
êê 
var
ëë 
fanfic
ëë 
=
ëë 
await
ëë 
_fanficContext
ëë )
.
ëë) *
Fanfic
ëë* 0
.
ëë0 1
	FindAsync
ëë1 :
(
ëë: ;
id
ëë; =
)
ëë= >
;
ëë> ?
_fanficContext
íí 
.
íí 
Fanfic
íí 
.
íí 
Remove
íí $
(
íí$ %
fanfic
íí% +
)
íí+ ,
;
íí, -
await
ìì 
_fanficContext
ìì 
.
ìì 
SaveChangesAsync
ìì -
(
ìì- .
)
ìì. /
;
ìì/ 0
}
îî 
public
ññ 

async
ññ 
Task
ññ 
<
ññ 
List
ññ 
<
ññ 
	FanficDto
ññ $
>
ññ$ %
>
ññ% &
SearchAsync
ññ' 2
(
ññ2 3
string
ññ3 9
searchString
ññ: F
,
ññF G
bool
ññH L
originalFandom
ññM [
)
ññ[ \
{
óó 
var
òò 
searchWords
òò 
=
òò 
searchString
òò &
.
òò& '
Split
òò' ,
(
òò, -
$char
òò- 0
)
òò0 1
;
òò1 2
var
öö 
query
öö 
=
öö 
_fanficContext
öö "
.
öö" #
Fanfic
öö# )
.
õõ 
Include
õõ 
(
õõ 
f
õõ 
=>
õõ 
f
õõ 
.
õõ 
FanficCategories
õõ ,
)
õõ, -
.
úú 
ThenInclude
úú 
(
úú 
fc
úú 
=>
úú 
fc
úú !
.
úú! "
Category
úú" *
)
úú* +
.
ùù 
Include
ùù 
(
ùù 
f
ùù 
=>
ùù 
f
ùù 
.
ùù 

FanficTags
ùù &
)
ùù& '
.
ûû 
ThenInclude
ûû 
(
ûû 
ft
ûû 
=>
ûû 
ft
ûû !
.
ûû! "
Tag
ûû" %
)
ûû% &
.
üü 
Include
üü 
(
üü 
f
üü 
=>
üü 
f
üü 
.
üü 
Chapters
üü $
)
üü$ %
.
†† 
Include
†† 
(
†† 
f
†† 
=>
†† 
f
†† 
.
†† 
Photos
†† "
)
††" #
.
°° 
Include
°° 
(
°° 
f
°° 
=>
°° 
f
°° 
.
°° 
Reviews
°° #
)
°°# $
.
¢¢ 
AsQueryable
¢¢ 
(
¢¢ 
)
¢¢ 
;
¢¢ 
query
§§ 
=
§§ 
searchWords
§§ 
.
§§ 
	Aggregate
§§ %
(
§§% &
query
§§& +
,
§§+ ,
(
•• 
current
•• 
,
•• 

searchWord
••  
)
••  !
=>
••" $
current
••% ,
.
••, -
Where
••- 2
(
••2 3
w
••3 4
=>
••5 7
w
¶¶ 
.
¶¶ 
Description
¶¶ 
!=
¶¶  
null
¶¶! %
&&
¶¶& (
(
¶¶) *
w
¶¶* +
.
¶¶+ ,
Title
¶¶, 1
.
¶¶1 2
Contains
¶¶2 :
(
¶¶: ;

searchWord
¶¶; E
)
¶¶E F
||
¶¶G I
w
ßß* +
.
ßß+ ,

FanficTags
ßß, 6
.
ßß6 7
Any
ßß7 :
(
ßß: ;
a
ßß; <
=>
ßß= ?
a
®®. /
.
®®/ 0
Tag
®®0 3
.
®®3 4
Name
®®4 8
!=
®®9 ;
null
®®< @
&&
®®A C
a
®®D E
.
®®E F
Tag
®®F I
.
®®I J
Name
®®J N
.
®®N O
Contains
®®O W
(
®®W X

searchWord
®®X b
)
®®b c
)
®®c d
||
®®e g
w
©©* +
.
©©+ ,
FanficCategories
©©, <
.
©©< =
Any
©©= @
(
©©@ A
a
©©A B
=>
©©C E
a
™™. /
.
™™/ 0
Category
™™0 8
.
™™8 9
Name
™™9 =
!=
™™> @
null
™™A E
&&
™™F H
a
™™I J
.
™™J K
Category
™™K S
.
™™S T
Name
™™T X
.
™™X Y
Contains
™™Y a
(
™™a b

searchWord
™™b l
)
™™l m
)
™™m n
||
™™o q
w
´´* +
.
´´+ ,
Description
´´, 7
.
´´7 8
Contains
´´8 @
(
´´@ A

searchWord
´´A K
)
´´K L
||
´´M O
w
¨¨* +
.
¨¨+ ,

AuthorName
¨¨, 6
.
¨¨6 7
Contains
¨¨7 ?
(
¨¨? @

searchWord
¨¨@ J
)
¨¨J K
||
¨¨L N
w
≠≠* +
.
≠≠+ ,
Language
≠≠, 4
.
≠≠4 5
Contains
≠≠5 =
(
≠≠= >

searchWord
≠≠> H
)
≠≠H I
||
≠≠J L
w
ÆÆ* +
.
ÆÆ+ ,
Chapters
ÆÆ, 4
.
ÆÆ4 5
Any
ÆÆ5 8
(
ÆÆ8 9
a
ÆÆ9 :
=>
ÆÆ; =
a
ØØ. /
.
ØØ/ 0
Title
ØØ0 5
.
ØØ5 6
Contains
ØØ6 >
(
ØØ> ?

searchWord
ØØ? I
)
ØØI J
||
ØØK M
a
∞∞. /
.
∞∞/ 0
Content
∞∞0 7
.
∞∞7 8
Contains
∞∞8 @
(
∞∞@ A

searchWord
∞∞A K
)
∞∞K L
)
∞∞L M
||
∞∞N P
w
±±* +
.
±±+ ,
Reviews
±±, 3
.
±±3 4
Any
±±4 7
(
±±7 8
a
±±8 9
=>
±±: <
a
≤≤. /
.
≤≤/ 0
Text
≤≤0 4
.
≤≤4 5
Contains
≤≤5 =
(
≤≤= >

searchWord
≤≤> H
)
≤≤H I
||
≤≤J L
a
≥≥. /
.
≥≥/ 0
UserName
≥≥0 8
.
≥≥8 9
Contains
≥≥9 A
(
≥≥A B

searchWord
≥≥B L
)
≥≥L M
)
≥≥M N
)
≥≥N O
)
≥≥O P
)
≥≥P Q
;
≥≥Q R
if
µµ 

(
µµ 
originalFandom
µµ 
)
µµ 
{
∂∂ 	
query
∑∑ 
=
∑∑ 
query
∑∑ 
.
∑∑ 
Where
∑∑ 
(
∑∑  
w
∑∑  !
=>
∑∑" $
w
∑∑% &
.
∑∑& '
OriginFandom
∑∑' 3
==
∑∑4 6
true
∑∑7 ;
)
∑∑; <
;
∑∑< =
}
∏∏ 	
return
∫∫ 
query
∫∫ 
.
∫∫ 
AsEnumerable
∫∫ !
(
∫∫! "
)
∫∫" #
.
∫∫# $
Select
∫∫$ *
(
∫∫* +"
MapFanficEntityToDto
∫∫+ ?
)
∫∫? @
.
∫∫@ A
ToList
∫∫A G
(
∫∫G H
)
∫∫H I
;
∫∫I J
}
ªª 
public
ææ 

async
ææ 
Task
ææ 
<
ææ 

ReviewsDto
ææ  
>
ææ  !
CreateReviewAsync
ææ" 3
(
ææ3 4
int
ææ4 7
fanficId
ææ8 @
,
ææ@ A

ReviewsDto
ææB L

reviewsDto
ææM W
)
ææW X
{
øø 
var
¿¿ 
reviewEntity
¿¿ 
=
¿¿ 
_mapper
¿¿ "
.
¿¿" #
Map
¿¿# &
<
¿¿& '
Reviews
¿¿' .
>
¿¿. /
(
¿¿/ 0

reviewsDto
¿¿0 :
)
¿¿: ;
;
¿¿; <
reviewEntity
¡¡ 
.
¡¡ 
CreationDate
¡¡ !
=
¡¡" #
DateTimeOffset
¡¡$ 2
.
¡¡2 3
UtcNow
¡¡3 9
;
¡¡9 :
reviewEntity
¬¬ 
.
¬¬ 
FanficId
¬¬ 
=
¬¬ 
fanficId
¬¬  (
;
¬¬( )
var
√√ 
createdReview
√√ 
=
√√ 
_fanficContext
√√ *
.
√√* +
Reviews
√√+ 2
.
√√2 3
Add
√√3 6
(
√√6 7
reviewEntity
√√7 C
)
√√C D
;
√√D E
await
ƒƒ 
_fanficContext
ƒƒ 
.
ƒƒ 
SaveChangesAsync
ƒƒ -
(
ƒƒ- .
)
ƒƒ. /
;
ƒƒ/ 0
return
≈≈ 
_mapper
≈≈ 
.
≈≈ 
Map
≈≈ 
<
≈≈ 

ReviewsDto
≈≈ %
>
≈≈% &
(
≈≈& '
createdReview
≈≈' 4
.
≈≈4 5
Entity
≈≈5 ;
)
≈≈; <
;
≈≈< =
}
∆∆ 
public
»» 

async
»» 
Task
»» 
<
»» 

ReviewsDto
»»  
>
»»  !
UpdateReviewAsync
»»" 3
(
»»3 4
int
»»4 7
fanficId
»»8 @
,
»»@ A

ReviewsDto
»»B L

reviewsDto
»»M W
)
»»W X
{
…… 
var
   
reviewEntity
   
=
   
_mapper
   "
.
  " #
Map
  # &
<
  & '
Reviews
  ' .
>
  . /
(
  / 0

reviewsDto
  0 :
)
  : ;
;
  ; <
reviewEntity
ÀÀ 
.
ÀÀ 
CreationDate
ÀÀ !
=
ÀÀ" #
DateTimeOffset
ÀÀ$ 2
.
ÀÀ2 3
UtcNow
ÀÀ3 9
;
ÀÀ9 :
reviewEntity
ÃÃ 
.
ÃÃ 
FanficId
ÃÃ 
=
ÃÃ 
fanficId
ÃÃ  (
;
ÃÃ( )
_fanficContext
ŒŒ 
.
ŒŒ 
Reviews
ŒŒ 
.
ŒŒ 
Update
ŒŒ %
(
ŒŒ% &
reviewEntity
ŒŒ& 2
)
ŒŒ2 3
;
ŒŒ3 4
await
œœ 
_fanficContext
œœ 
.
œœ 
SaveChangesAsync
œœ -
(
œœ- .
)
œœ. /
;
œœ/ 0
return
–– 
_mapper
–– 
.
–– 
Map
–– 
<
–– 

ReviewsDto
–– %
>
––% &
(
––& '
reviewEntity
––' 3
)
––3 4
;
––4 5
}
—— 
public
”” 

async
”” 
Task
”” 
DeleteReviewAsync
”” '
(
””' (
int
””( +
fanficId
””, 4
,
””4 5
string
””6 <
userName
””= E
)
””E F
{
‘‘ 
var
’’ 
review
’’ 
=
’’ 
await
’’ 
_fanficContext
’’ )
.
’’) *
Reviews
’’* 1
.
’’1 2!
FirstOrDefaultAsync
’’2 E
(
’’E F
x
’’F G
=>
’’H J
x
÷÷ 
.
÷÷ 
FanficId
÷÷ 
==
÷÷ 
fanficId
÷÷ "
&&
÷÷# %
x
÷÷& '
.
÷÷' (
UserName
÷÷( 0
==
÷÷1 3
userName
÷÷4 <
)
÷÷< =
;
÷÷= >
_fanficContext
◊◊ 
.
◊◊ 
Reviews
◊◊ 
.
◊◊ 
Remove
◊◊ %
(
◊◊% &
review
◊◊& ,
)
◊◊, -
;
◊◊- .
await
ÿÿ 
_fanficContext
ÿÿ 
.
ÿÿ 
SaveChangesAsync
ÿÿ -
(
ÿÿ- .
)
ÿÿ. /
;
ÿÿ/ 0
}
ŸŸ 
public
€€ 

async
€€ 
Task
€€ 
<
€€ 

ReviewsDto
€€  
>
€€  !&
GetReviewByFanficIdAsync
€€" :
(
€€: ;
int
€€; >
fanficId
€€? G
,
€€G H
string
€€I O
userName
€€P X
)
€€X Y
{
‹‹ 
var
›› 
review
›› 
=
›› 
await
ﬁﬁ 
_fanficContext
ﬁﬁ  
.
ﬁﬁ  !
Reviews
ﬁﬁ! (
.
ﬁﬁ( )
AsNoTracking
ﬁﬁ) 5
(
ﬁﬁ5 6
)
ﬁﬁ6 7
.
ﬂﬂ !
FirstOrDefaultAsync
ﬂﬂ $
(
ﬂﬂ$ %
x
ﬂﬂ% &
=>
ﬂﬂ' )
x
ﬂﬂ* +
.
ﬂﬂ+ ,
FanficId
ﬂﬂ, 4
==
ﬂﬂ5 7
fanficId
ﬂﬂ8 @
&&
ﬂﬂA C
x
ﬂﬂD E
.
ﬂﬂE F
UserName
ﬂﬂF N
==
ﬂﬂO Q
userName
ﬂﬂR Z
)
ﬂﬂZ [
;
ﬂﬂ[ \
return
‡‡ 
_mapper
‡‡ 
.
‡‡ 
Map
‡‡ 
<
‡‡ 

ReviewsDto
‡‡ %
>
‡‡% &
(
‡‡& '
review
‡‡' -
)
‡‡- .
;
‡‡. /
}
·· 
public
‰‰ 

async
‰‰ 
Task
‰‰ 
<
‰‰ 
List
‰‰ 
<
‰‰ 

ReviewsDto
‰‰ %
>
‰‰% &
>
‰‰& ')
GetAllReviewByFanficIdAsync
‰‰( C
(
‰‰C D
int
‰‰D G
fanficId
‰‰H P
)
‰‰P Q
{
ÂÂ 
var
ÊÊ 
review
ÊÊ 
=
ÊÊ 
await
ÊÊ 
_fanficContext
ÊÊ )
.
ÊÊ) *
Reviews
ÊÊ* 1
.
ÊÊ1 2
Where
ÊÊ2 7
(
ÊÊ7 8
x
ÊÊ8 9
=>
ÊÊ: <
x
ÊÊ= >
.
ÊÊ> ?
FanficId
ÊÊ? G
==
ÊÊH J
fanficId
ÊÊK S
)
ÊÊS T
.
ÊÊT U
ToListAsync
ÊÊU `
(
ÊÊ` a
)
ÊÊa b
;
ÊÊb c
return
ÁÁ 
_mapper
ÁÁ 
.
ÁÁ 
Map
ÁÁ 
<
ÁÁ 
List
ÁÁ 
<
ÁÁ  

ReviewsDto
ÁÁ  *
>
ÁÁ* +
>
ÁÁ+ ,
(
ÁÁ, -
review
ÁÁ- 3
)
ÁÁ3 4
;
ÁÁ4 5
}
ËË 
public
ÍÍ 

async
ÍÍ 
Task
ÍÍ 
<
ÍÍ 
List
ÍÍ 
<
ÍÍ 

ReviewsDto
ÍÍ %
>
ÍÍ% &
>
ÍÍ& '
GetAllReview
ÍÍ( 4
(
ÍÍ4 5
)
ÍÍ5 6
{
ÎÎ 
var
ÏÏ 
review
ÏÏ 
=
ÏÏ 
await
ÏÏ 
_fanficContext
ÏÏ )
.
ÏÏ) *
Reviews
ÏÏ* 1
.
ÏÏ1 2
ToListAsync
ÏÏ2 =
(
ÏÏ= >
)
ÏÏ> ?
;
ÏÏ? @
return
ÌÌ 
_mapper
ÌÌ 
.
ÌÌ 
Map
ÌÌ 
<
ÌÌ 
List
ÌÌ 
<
ÌÌ  

ReviewsDto
ÌÌ  *
>
ÌÌ* +
>
ÌÌ+ ,
(
ÌÌ, -
review
ÌÌ- 3
)
ÌÌ3 4
;
ÌÌ4 5
}
ÓÓ 
public
 

async
 
Task
 
<
 
List
 
<
 

ReviewsDto
 %
>
% &
>
& ')
GetAllReviewByUserNameAsync
( C
(
C D
string
D J
userName
K S
)
S T
{
ÒÒ 
var
ÚÚ 
review
ÚÚ 
=
ÚÚ 
await
ÚÚ 
_fanficContext
ÚÚ )
.
ÚÚ) *
Reviews
ÚÚ* 1
.
ÚÚ1 2
Where
ÚÚ2 7
(
ÚÚ7 8
x
ÚÚ8 9
=>
ÚÚ: <
x
ÚÚ= >
.
ÚÚ> ?
UserName
ÚÚ? G
==
ÚÚH J
userName
ÚÚK S
)
ÚÚS T
.
ÚÚT U
ToListAsync
ÚÚU `
(
ÚÚ` a
)
ÚÚa b
;
ÚÚb c
return
ÛÛ 
_mapper
ÛÛ 
.
ÛÛ 
Map
ÛÛ 
<
ÛÛ 
List
ÛÛ 
<
ÛÛ  

ReviewsDto
ÛÛ  *
>
ÛÛ* +
>
ÛÛ+ ,
(
ÛÛ, -
review
ÛÛ- 3
)
ÛÛ3 4
;
ÛÛ4 5
}
ÙÙ 
public
ˆˆ 

async
ˆˆ 
Task
ˆˆ 
<
ˆˆ 
List
ˆˆ 
<
ˆˆ 
	FanficDto
ˆˆ $
>
ˆˆ$ %
>
ˆˆ% &&
GetTopRatingFanficsAsync
ˆˆ' ?
(
ˆˆ? @
int
ˆˆ@ C
count
ˆˆD I
)
ˆˆI J
{
˜˜ 
var
¯¯ 
fanfics
¯¯ 
=
¯¯ 
await
¯¯ 
_fanficContext
¯¯ *
.
¯¯* +
Fanfic
¯¯+ 1
.
˘˘ 
Include
˘˘ 
(
˘˘ 
f
˘˘ 
=>
˘˘ 
f
˘˘ 
.
˘˘ 
FanficCategories
˘˘ ,
)
˘˘, -
.
˙˙ 
ThenInclude
˙˙ 
(
˙˙ 
fc
˙˙ 
=>
˙˙ 
fc
˙˙ !
.
˙˙! "
Category
˙˙" *
)
˙˙* +
.
˚˚ 
Include
˚˚ 
(
˚˚ 
f
˚˚ 
=>
˚˚ 
f
˚˚ 
.
˚˚ 

FanficTags
˚˚ &
)
˚˚& '
.
¸¸ 
ThenInclude
¸¸ 
(
¸¸ 
ft
¸¸ 
=>
¸¸ 
ft
¸¸ !
.
¸¸! "
Tag
¸¸" %
)
¸¸% &
.
˝˝ 
Include
˝˝ 
(
˝˝ 
f
˝˝ 
=>
˝˝ 
f
˝˝ 
.
˝˝ 
Chapters
˝˝ $
)
˝˝$ %
.
˛˛ 
Include
˛˛ 
(
˛˛ 
f
˛˛ 
=>
˛˛ 
f
˛˛ 
.
˛˛ 
Photos
˛˛ "
)
˛˛" #
.
ˇˇ 
Include
ˇˇ 
(
ˇˇ 
f
ˇˇ 
=>
ˇˇ 
f
ˇˇ 
.
ˇˇ 
Reviews
ˇˇ #
)
ˇˇ# $
.
ÄÄ 
OrderByDescending
ÄÄ 
(
ÄÄ 
x
ÄÄ  
=>
ÄÄ! #
x
ÄÄ$ %
.
ÄÄ% &
Reviews
ÄÄ& -
.
ÄÄ- .
Select
ÄÄ. 4
(
ÄÄ4 5
s
ÄÄ5 6
=>
ÄÄ7 9
s
ÄÄ: ;
.
ÄÄ; <
Rating
ÄÄ< B
)
ÄÄB C
.
ÄÄC D
Average
ÄÄD K
(
ÄÄK L
)
ÄÄL M
)
ÄÄM N
.
ÅÅ 
Take
ÅÅ 
(
ÅÅ 
count
ÅÅ 
)
ÅÅ 
.
ÇÇ 
ToListAsync
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
return
ÑÑ 
fanfics
ÑÑ 
.
ÑÑ 
Select
ÑÑ 
(
ÑÑ "
MapFanficEntityToDto
ÑÑ 2
)
ÑÑ2 3
.
ÑÑ3 4
ToList
ÑÑ4 :
(
ÑÑ: ;
)
ÑÑ; <
;
ÑÑ< =
}
ÖÖ 
public
áá 

async
áá 
Task
áá 
<
áá 
List
áá 
<
áá 
	FanficDto
áá $
>
áá$ %
>
áá% &-
GetLastCreationDateFanficsAsync
áá' F
(
ááF G
int
ááG J
count
ááK P
)
ááP Q
{
àà 
var
ââ 
fanfics
ââ 
=
ââ 
await
ââ 
_fanficContext
ââ *
.
ââ* +
Fanfic
ââ+ 1
.
ää 
Include
ää 
(
ää 
f
ää 
=>
ää 
f
ää 
.
ää 
FanficCategories
ää ,
)
ää, -
.
ãã 
ThenInclude
ãã 
(
ãã 
fc
ãã 
=>
ãã 
fc
ãã !
.
ãã! "
Category
ãã" *
)
ãã* +
.
åå 
Include
åå 
(
åå 
f
åå 
=>
åå 
f
åå 
.
åå 

FanficTags
åå &
)
åå& '
.
çç 
ThenInclude
çç 
(
çç 
ft
çç 
=>
çç 
ft
çç !
.
çç! "
Tag
çç" %
)
çç% &
.
éé 
Include
éé 
(
éé 
f
éé 
=>
éé 
f
éé 
.
éé 
Chapters
éé $
)
éé$ %
.
èè 
Include
èè 
(
èè 
f
èè 
=>
èè 
f
èè 
.
èè 
Photos
èè "
)
èè" #
.
êê 
Include
êê 
(
êê 
f
êê 
=>
êê 
f
êê 
.
êê 
Reviews
êê #
)
êê# $
.
ëë 
OrderByDescending
ëë 
(
ëë 
x
ëë  
=>
ëë! #
x
ëë$ %
.
ëë% &
CreationDate
ëë& 2
)
ëë2 3
.
íí 
Take
íí 
(
íí 
count
íí 
)
íí 
.
ìì 
ToListAsync
ìì 
(
ìì 
)
ìì 
;
ìì 
return
ïï 
fanfics
ïï 
.
ïï 
Select
ïï 
(
ïï "
MapFanficEntityToDto
ïï 2
)
ïï2 3
.
ïï3 4
ToList
ïï4 :
(
ïï: ;
)
ïï; <
;
ïï< =
}
ññ 
public
òò 

async
òò 
Task
òò 
SaveChangesAsync
òò &
(
òò& '
)
òò' (
{
ôô 
await
öö 
_fanficContext
öö 
.
öö 
SaveChangesAsync
öö -
(
öö- .
)
öö. /
;
öö/ 0
}
õõ 
private
ùù 
static
ùù 
	FanficDto
ùù "
MapFanficEntityToDto
ùù 1
(
ùù1 2
Entities
ùù2 :
.
ùù: ;
Fanfic
ùù; A
fanficEntity
ùùB N
)
ùùN O
{
ûû 
return
üü 
new
üü 
	FanficDto
üü 
{
†† 	
Id
°° 
=
°° 
fanficEntity
°° 
.
°° 
FanficId
°° &
,
°°& '

AuthorName
¢¢ 
=
¢¢ 
fanficEntity
¢¢ %
.
¢¢% &

AuthorName
¢¢& 0
,
¢¢0 1
Title
££ 
=
££ 
fanficEntity
££  
.
££  !
Title
££! &
,
££& '
Description
§§ 
=
§§ 
fanficEntity
§§ &
.
§§& '
Description
§§' 2
,
§§2 3
OriginFandom
•• 
=
•• 
fanficEntity
•• '
.
••' (
OriginFandom
••( 4
,
••4 5
Stage
¶¶ 
=
¶¶ 
fanficEntity
¶¶  
.
¶¶  !
Stage
¶¶! &
,
¶¶& '
Language
ßß 
=
ßß 
fanficEntity
ßß #
.
ßß# $
Language
ßß$ ,
,
ßß, -
CreationDate
®® 
=
®® 
fanficEntity
®® '
.
®®' (
CreationDate
®®( 4
,
®®4 5
Image
©© 
=
©© 
fanficEntity
©©  
.
©©  !
Photos
©©! '
.
©©' (
FirstOrDefault
©©( 6
(
©©6 7
)
©©7 8
?
©©8 9
.
©©9 :
Image
©©: ?
,
©©? @

Categories
™™ 
=
™™ 
fanficEntity
™™ %
.
™™% &
FanficCategories
™™& 6
.
™™6 7
Select
™™7 =
(
™™= >
fc
™™> @
=>
™™A C
new
™™D G
CategoryDto
™™H S
{
´´ 
Name
¨¨ 
=
¨¨ 
fc
¨¨ 
.
¨¨ 
Category
¨¨ "
.
¨¨" #
Name
¨¨# '
,
¨¨' (

CategoryId
≠≠ 
=
≠≠ 
fc
≠≠ 
.
≠≠  
Category
≠≠  (
.
≠≠( )

CategoryId
≠≠) 3
}
ÆÆ 
)
ÆÆ 
.
ÆÆ 
ToList
ÆÆ 
(
ÆÆ 
)
ÆÆ 
,
ÆÆ 
Tags
ØØ 
=
ØØ 
fanficEntity
ØØ 
.
ØØ  

FanficTags
ØØ  *
.
ØØ* +
Select
ØØ+ 1
(
ØØ1 2
ft
ØØ2 4
=>
ØØ5 7
new
ØØ8 ;
TagDto
ØØ< B
{
∞∞ 
Name
±± 
=
±± 
ft
±± 
.
±± 
Tag
±± 
.
±± 
Name
±± "
,
±±" #
TagId
≤≤ 
=
≤≤ 
ft
≤≤ 
.
≤≤ 
Tag
≤≤ 
.
≤≤ 
TagId
≤≤ $
,
≤≤$ %

IsApproved
≥≥ 
=
≥≥ 
ft
≥≥ 
.
≥≥  
Tag
≥≥  #
.
≥≥# $

IsApproved
≥≥$ .
}
¥¥ 
)
¥¥ 
.
¥¥ 
ToList
¥¥ 
(
¥¥ 
)
¥¥ 
,
¥¥ 
Chapters
µµ 
=
µµ 
fanficEntity
µµ #
.
µµ# $
Chapters
µµ$ ,
.
µµ, -
Select
µµ- 3
(
µµ3 4
chapter
µµ4 ;
=>
µµ< >
new
µµ? B

ChapterDto
µµC M
{
∂∂ 
FanficId
∑∑ 
=
∑∑ 
fanficEntity
∑∑ '
.
∑∑' (
FanficId
∑∑( 0
,
∑∑0 1
Title
∏∏ 
=
∏∏ 
chapter
∏∏ 
.
∏∏  
Title
∏∏  %
,
∏∏% &
Content
ππ 
=
ππ 
chapter
ππ !
.
ππ! "
Content
ππ" )
}
∫∫ 
)
∫∫ 
.
∫∫ 
ToList
∫∫ 
(
∫∫ 
)
∫∫ 
,
∫∫ 
Reviews
ªª 
=
ªª 
fanficEntity
ªª "
.
ªª" #
Reviews
ªª# *
.
ªª* +
Select
ªª+ 1
(
ªª1 2
review
ªª2 8
=>
ªª9 ;
new
ªª< ?

ReviewsDto
ªª@ J
{
ºº 
FanficId
ΩΩ 
=
ΩΩ 
fanficEntity
ΩΩ '
.
ΩΩ' (
FanficId
ΩΩ( 0
,
ΩΩ0 1
ReviewId
ææ 
=
ææ 
review
ææ !
.
ææ! "
ReviewId
ææ" *
,
ææ* +
Text
øø 
=
øø 
review
øø 
.
øø 
Text
øø "
,
øø" #
CreationDate
¿¿ 
=
¿¿ 
review
¿¿ %
.
¿¿% &
CreationDate
¿¿& 2
,
¿¿2 3
UserName
¡¡ 
=
¡¡ 
review
¡¡ !
.
¡¡! "
UserName
¡¡" *
,
¡¡* +
Rating
¬¬ 
=
¬¬ 
review
¬¬ 
.
¬¬  
Rating
¬¬  &
}
√√ 
)
√√ 
.
√√ 
Where
√√ 
(
√√ 
review
√√ 
=>
√√ 
review
√√ %
.
√√% &
FanficId
√√& .
==
√√/ 1
fanficEntity
√√2 >
.
√√> ?
FanficId
√√? G
)
√√G H
.
√√H I
ToList
√√I O
(
√√O P
)
√√P Q
}
ƒƒ 	
;
ƒƒ	 

}
≈≈ 
}∆∆ Ø"
~C:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Repos\Impl\FanficPhotoRepository.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Repos  %
.% &
Impl& *
{		 
public

 

class

 !
FanficPhotoRepository

 &
:

' (
RepositoryBase

) 7
<

7 8
FanficPhoto

8 C
>

C D
,

D E"
IFanficPhotoRepository

F \
{ 
private 
readonly 
FanficContext &
_context' /
;/ 0
private 
readonly 
IMapper  
_mapper! (
;( )
public !
FanficPhotoRepository $
($ %
IMapper% ,
mapper- 3
,3 4
FanficContext5 B
contextC J
)J K
:L M
baseN R
(R S
contextS Z
)Z [
{ 	
_context 
= 
context 
; 
_mapper 
= 
mapper 
; 
} 	
public 
Task 
CreateAsync 
(  
FanficPhotoDto  .
fanficPhoto/ :
): ;
{ 	
var 
fanficPhotoEntity !
=" #
_mapper$ +
.+ ,
Map, /
</ 0
FanficPhoto0 ;
>; <
(< =
fanficPhoto= H
)H I
;I J
_context 
. 
FanficPhotos !
.! "
Add" %
(% &
fanficPhotoEntity& 7
)7 8
;8 9
return 
_context 
. 
SaveChangesAsync ,
(, -
)- .
;. /
} 	
public 
Task 
DeleteAsync 
(  
int  #
id$ &
)& '
{ 	
var 
fanficPhoto 
= 
_context &
.& '
FanficPhotos' 3
.3 4
FirstOrDefault4 B
(B C
xC D
=>E G
xH I
.I J
IdJ L
==M O
idP R
)R S
;S T
_context 
. 
FanficPhotos !
.! "
Remove" (
(( )
fanficPhoto) 4
)4 5
;5 6
return   
_context   
.   
SaveChangesAsync   ,
(  , -
)  - .
;  . /
}!! 	
public## 
Task## 
UpdateAsync## 
(##  
FanficPhotoDto##  .
fanficPhoto##/ :
)##: ;
{$$ 	
var%% 
fanficPhotoEntity%% !
=%%" #
_mapper%%$ +
.%%+ ,
Map%%, /
<%%/ 0
FanficPhoto%%0 ;
>%%; <
(%%< =
fanficPhoto%%= H
)%%H I
;%%I J
_context&& 
.&& 
FanficPhotos&& !
.&&! "
Update&&" (
(&&( )
fanficPhotoEntity&&) :
)&&: ;
;&&; <
return'' 
_context'' 
.'' 
SaveChangesAsync'' ,
('', -
)''- .
;''. /
}(( 	
public** 
Task** 
<** 
FanficPhotoDto** "
?**" #
>**# $
GetByIdAsync**% 1
(**1 2
int**2 5
id**6 8
)**8 9
{++ 	
return,, 
_context,, 
.,, 
FanficPhotos,, (
.,,( )
Where,,) .
(,,. /
w,,/ 0
=>,,1 3
w,,4 5
.,,5 6
FanficId,,6 >
==,,? A
id,,B D
),,D E
.,,E F
Select,,F L
(,,L M
s,,M N
=>,,O Q
new,,R U
FanficPhotoDto,,V d
{-- 
FanficId.. 
=.. 
s.. 
... 
FanficId.. %
,..% &
Image// 
=// 
s// 
.// 
Image// 
}00 
)00 
.00 
FirstOrDefaultAsync00 "
(00" #
)00# $
;00$ %
}11 	
}22 
}33 ˆ>
zC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Repos\Impl\CommentRepository.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Repos  %
.% &
Impl& *
;* +
public

 
class

 
CommentRepository

 
:

  
ICommentRepository

! 3
{ 
private 
readonly 
FanficContext "
_context# +
;+ ,
private 
readonly 
IMapper 
_mapper $
;$ %
public 

CommentRepository 
( 
FanficContext *
context+ 2
,2 3
IMapper4 ;
mapper< B
)B C
{ 
_context 
= 
context 
; 
_mapper 
= 
mapper 
; 
} 
public 

async 
Task 
< 

CommentDto  
>  !
AddCommentAsync" 1
(1 2

CommentDto2 <

commentDto= G
)G H
{ 
var 
commentEntity 
= 
_mapper #
.# $
Map$ '
<' (
Comment( /
>/ 0
(0 1

commentDto1 ;
); <
;< =
commentEntity 
. 
	CreatedAt 
=  !
DateTimeOffset" 0
.0 1
Now1 4
;4 5
await 
_context 
. 
Comments 
.  
AddAsync  (
(( )
commentEntity) 6
)6 7
;7 8
await 
_context 
. 
SaveChangesAsync '
(' (
)( )
;) *
return 
_mapper 
. 
Map 
< 

CommentDto %
>% &
(& '
commentEntity' 4
)4 5
;5 6
} 
public 

async 
Task 
< 

CommentDto  
>  !
UpdateCommentAsync" 4
(4 5

CommentDto5 ?

commentDto@ J
)J K
{   
var!! 
commentEntity!! 
=!! 
_mapper!! #
.!!# $
Map!!$ '
<!!' (
Comment!!( /
>!!/ 0
(!!0 1

commentDto!!1 ;
)!!; <
;!!< =
commentEntity"" 
."" 
	CreatedAt"" 
=""  !
DateTimeOffset""" 0
.""0 1
Now""1 4
;""4 5
_context## 
.## 
Comments## 
.## 
Update##  
(##  !
commentEntity##! .
)##. /
;##/ 0
await$$ 
_context$$ 
.$$ 
SaveChangesAsync$$ '
($$' (
)$$( )
;$$) *
return&& 
_mapper&& 
.&& 
Map&& 
<&& 

CommentDto&& %
>&&% &
(&&& '
commentEntity&&' 4
)&&4 5
;&&5 6
}'' 
public)) 

async)) 
Task)) 
DeleteCommentAsync)) (
())( )
int))) ,
id))- /
)))/ 0
{** 
var++ 
comment++ 
=++ 
await++ 
_context++ $
.++$ %
Comments++% -
.++- .
FirstOrDefaultAsync++. A
(++A B
x++B C
=>++D F
x++G H
.++H I
	CommentId++I R
==++S U
id++V X
)++X Y
;++Y Z
if,, 

(,, 
comment,, 
!=,, 
null,, 
),, 
_context,, %
.,,% &
Comments,,& .
.,,. /
Remove,,/ 5
(,,5 6
comment,,6 =
),,= >
;,,> ?
else-- 
throw-- 
new-- 
	Exception--  
(--  !
$str--! 4
)--4 5
;--5 6
await.. 
_context.. 
... 
SaveChangesAsync.. '
(..' (
)..( )
;..) *
}// 
public11 

async11 
Task11 
<11 

CommentDto11  
>11  !&
GetCommentByCommentIdAsync11" <
(11< =
int11= @
id11A C
,11C D
string11E K

authorName11L V
)11V W
{22 
var33 
comment33 
=33 
await33 
_context33 $
.33$ %
Comments33% -
.33- .
FirstOrDefaultAsync33. A
(33A B
x33B C
=>33D F
x33G H
.33H I
	CommentId33I R
==33S U
id33V X
&&33Y [
x33\ ]
.33] ^

AuthorName33^ h
==33i k

authorName33l v
)33v w
;33w x
return44 
_mapper44 
.44 
Map44 
<44 

CommentDto44 %
>44% &
(44& '
comment44' .
)44. /
;44/ 0
}55 
public77 

async77 
Task77 
<77 
List77 
<77 

CommentDto77 %
>77% &
>77& '&
GetCommentsByFanficIdAsync77( B
(77B C
int77C F
fanficId77G O
)77O P
{88 
var99 
commentList99 
=99 
await99 
_context99  (
.99( )
Comments99) 1
.991 2
Where992 7
(997 8
x998 9
=>99: <
x99= >
.99> ?
FanficId99? G
==99H J
fanficId99K S
)99S T
.99T U
ToListAsync99U `
(99` a
)99a b
;99b c
return:: 
_mapper:: 
.:: 
Map:: 
<:: 
List:: 
<::  

CommentDto::  *
>::* +
>::+ ,
(::, -
commentList::- 8
)::8 9
;::9 :
};; 
public== 

async== 
Task== 
<== 

CommentDto==  
>==  !
ReplyCommentAsync==" 3
(==3 4

CommentDto==4 >

commentDto==? I
)==I J
{>> 
var?? 
parentComment?? 
=?? 
await?? !
_context??" *
.??* +
Comments??+ 3
.??3 4
FirstOrDefaultAsync??4 G
(??G H
x??H I
=>??J L
x??M N
.??N O
	CommentId??O X
==??Y [

commentDto??\ f
.??f g
	CommentId??g p
)??p q
;??q r
if@@ 

(@@ 
parentComment@@ 
==@@ 
null@@ !
)@@! "
throw@@# (
new@@) ,
	Exception@@- 6
(@@6 7
$str@@7 Q
)@@Q R
;@@R S
varBB 
replyCommentEntityBB 
=BB  
_mapperBB! (
.BB( )
MapBB) ,
<BB, -
CommentBB- 4
>BB4 5
(BB5 6

commentDtoBB6 @
)BB@ A
;BBA B
replyCommentEntityCC 
.CC 
	CreatedAtCC $
=CC% &
DateTimeOffsetCC' 5
.CC5 6
NowCC6 9
;CC9 :
awaitEE 
_contextEE 
.EE 
CommentsEE 
.EE  
AddAsyncEE  (
(EE( )
replyCommentEntityEE) ;
)EE; <
;EE< =
awaitFF 
_contextFF 
.FF 
SaveChangesAsyncFF '
(FF' (
)FF( )
;FF) *
returnHH 
_mapperHH 
.HH 
MapHH 
<HH 

CommentDtoHH %
>HH% &
(HH& '
replyCommentEntityHH' 9
)HH9 :
;HH: ;
}II 
}JJ å7
zC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Repos\Impl\ChapterRepository.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Repos  %
.% &
Impl& *
;* +
public

 
class

 
ChapterRepository

 
:

  
RepositoryBase

! /
<

/ 0
Chapter

0 7
>

7 8
,

8 9
IChapterRepository

: L
{ 
private 
readonly 
FanficContext "
_context# +
;+ ,
private 
readonly 
IMapper 
_mapper $
;$ %
public 

ChapterRepository 
( 
FanficContext *
context+ 2
,2 3
IMapper4 ;
mapper< B
)B C
:D E
baseF J
(J K
contextK R
)R S
{ 
_context 
= 
context 
; 
_mapper 
= 
mapper 
; 
} 
public 

async 
Task 
< 

ChapterDto  
>  !
CreateAsync" -
(- .

ChapterDto. 8
chapter9 @
)@ A
{ 
var 
chapterEntity 
= 
_mapper #
.# $
Map$ '
<' (
Chapter( /
>/ 0
(0 1
chapter1 8
)8 9
;9 :
chapterEntity 
. 

CreateDate  
=! "
DateTimeOffset# 1
.1 2
Now2 5
.5 6
ToUniversalTime6 E
(E F
)F G
;G H
_context 
. 
Chapters 
. 
Add 
( 
chapterEntity +
)+ ,
;, -
await 
_context 
. 
SaveChangesAsync '
(' (
)( )
;) *
return 
_mapper 
. 
Map 
< 

ChapterDto %
>% &
(& '
chapterEntity' 4
)4 5
;5 6
} 
public 

async 
Task 
DeleteAsync !
(! "
int" %
id& (
)( )
{   
var!! 
chapter!! 
=!! 
_context!! 
.!! 
Chapters!! '
.!!' (
FirstOrDefault!!( 6
(!!6 7
x!!7 8
=>!!9 ;
x!!< =
.!!= >
	ChapterId!!> G
==!!H J
id!!K M
)!!M N
;!!N O
_context"" 
."" 
Chapters"" 
."" 
Remove""  
(""  !
chapter""! (
)""( )
;"") *
await## 
_context## 
.## 
SaveChangesAsync## '
(##' (
)##( )
;##) *
}$$ 
public&& 

async&& 
Task&& 
<&& 

ChapterDto&&  
>&&  !
UpdateAsync&&" -
(&&- .

ChapterDto&&. 8
chapter&&9 @
)&&@ A
{'' 
var(( 
chapterEntity(( 
=(( 
_mapper(( #
.((# $
Map(($ '
<((' (
Chapter((( /
>((/ 0
(((0 1
chapter((1 8
)((8 9
;((9 :
_context)) 
.)) 
Chapters)) 
.)) 
Update))  
())  !
chapterEntity))! .
))). /
;))/ 0
chapterEntity** 
.** 

CreateDate**  
=**! "
DateTimeOffset**# 1
.**1 2
Now**2 5
.**5 6
ToUniversalTime**6 E
(**E F
)**F G
;**G H
await++ 
_context++ 
.++ 
SaveChangesAsync++ '
(++' (
)++( )
;++) *
return,, 
_mapper,, 
.,, 
Map,, 
<,, 

ChapterDto,, %
>,,% &
(,,& '
chapterEntity,,' 4
),,4 5
;,,5 6
}-- 
public// 

async// 
Task// 
<// 
Chapter// 
?// 
>// 
GetByIdAsync//  ,
(//, -
int//- 0
id//1 3
)//3 4
{00 
var11 
chapter11 
=11 
await11 
_context11 %
.11% &
Chapters11& .
.11. /
FirstOrDefaultAsync11/ B
(11B C
x11C D
=>11E G
x11H I
.11I J
	ChapterId11J S
==11T V
id11W Y
)11Y Z
;11Z [
return22 
_mapper22 
.22 
Map22 
<22 
Chapter22 "
>22" #
(22# $
chapter22$ +
)22+ ,
;22, -
}33 
public55 

async55 
Task55 
<55 
List55 
<55 
Chapter55 "
>55" #
>55# $
GetAllAsync55% 0
(550 1
)551 2
{66 
var77 
chapters77 
=77 
await77 
_context77 %
.77% &
Chapters77& .
.77. /
ToListAsync77/ :
(77: ;
)77; <
;77< =
return88 
_mapper88 
.88 
Map88 
<88 
List88  
<88  !
Chapter88! (
>88( )
>88) *
(88* +
chapters88+ 3
)883 4
;884 5
}99 
public;; 

async;; 
Task;; 
<;; 
List;; 
<;; 
Chapter;; "
>;;" #
>;;# $!
GetAllByFanficIdAsync;;% :
(;;: ;
int;;; >
fanficId;;? G
);;G H
{<< 
var== 
chapters== 
=== 
await== 
_context== %
.==% &
Chapters==& .
.==. /
Where==/ 4
(==4 5
x==5 6
=>==7 9
x==: ;
.==; <
FanficId==< D
====E G
fanficId==H P
)==P Q
.==Q R
ToListAsync==R ]
(==] ^
)==^ _
;==_ `
return>> 
_mapper>> 
.>> 
Map>> 
<>> 
List>> 
<>>  
Chapter>>  '
>>>' (
>>>( )
(>>) *
chapters>>* 2
)>>2 3
;>>3 4
}?? 
publicAA 

asyncAA 
TaskAA 
SaveChangesAsyncAA &
(AA& '
)AA' (
{BB 
awaitCC 
_contextCC 
.CC 
SaveChangesAsyncCC '
(CC' (
)CC( )
;CC) *
}DD 
}EE õ
ÑC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Repos\Impl\CommentPhotoPhotoRepository.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Repos  %
.% &
Impl& *
{ 
public		 

class		 "
CommentPhotoRepository		 '
:		( )
RepositoryBase		* 8
<		8 9
CommentPhoto		9 E
>		E F
,		F G#
ICommentPhotoRepository		H _
{

 
private 
readonly 
FanficContext &
_context' /
;/ 0
private 
readonly 
IMapper  
_mapper! (
;( )
public "
CommentPhotoRepository %
(% &
IMapper& -
mapper. 4
,4 5
FanficContext6 C
contextD K
)K L
:M N
baseO S
(S T
contextT [
)[ \
{ 	
_mapper 
= 
mapper 
; 
_context 
= 
context 
; 
} 	
public 
Task 
CreateAsync 
(  
CommentPhotoDto  /
fanficComment0 =
)= >
{ 	
var 
fanficPhotoEntity !
=" #
_mapper$ +
.+ ,
Map, /
</ 0
CommentPhoto0 <
>< =
(= >
fanficComment> K
)K L
;L M
_context 
. 
CommentPhotos "
." #
Add# &
(& '
fanficPhotoEntity' 8
)8 9
;9 :
return 
_context 
. 
SaveChangesAsync ,
(, -
)- .
;. /
} 	
public 
Task 
DeleteAsync 
(  
int  #
id$ &
)& '
{ 	
var 
fanficPhoto 
= 
_context &
.& '
CommentPhotos' 4
.4 5
FirstOrDefault5 C
(C D
xD E
=>F H
xI J
.J K
IdK M
==N P
idQ S
)S T
;T U
_context 
. 
CommentPhotos "
." #
Remove# )
() *
fanficPhoto* 5
)5 6
;6 7
return 
_context 
. 
SaveChangesAsync ,
(, -
)- .
;. /
}   	
public"" 
Task"" 
UpdateAsync"" 
(""  
CommentPhotoDto""  /
fanficComment""0 =
)""= >
{## 	
var$$ 
fanficPhotoEntity$$ !
=$$" #
_mapper$$$ +
.$$+ ,
Map$$, /
<$$/ 0
CommentPhoto$$0 <
>$$< =
($$= >
fanficComment$$> K
)$$K L
;$$L M
_context%% 
.%% 
CommentPhotos%% "
.%%" #
Update%%# )
(%%) *
fanficPhotoEntity%%* ;
)%%; <
;%%< =
return&& 
_context&& 
.&& 
SaveChangesAsync&& ,
(&&, -
)&&- .
;&&. /
}'' 	
}(( 
})) :
{C:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Repos\Impl\CategoryRepository.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Repos  %
.% &
Impl& *
{		 
public

 

class

 
CategoryRepository

 #
:

$ %
RepositoryBase

& 4
<

4 5
Category

5 =
>

= >
,

> ?
ICategoryRepository

@ S
{ 
private 
readonly 
FanficContext &
_context' /
;/ 0
private 
readonly 
IMapper  
_mapper! (
;( )
public 
CategoryRepository !
(! "
FanficContext" /
context0 7
,7 8
IMapper9 @
mapperA G
)G H
:I J
baseK O
(O P
contextP W
)W X
{ 	
_context 
= 
context 
; 
_mapper 
= 
mapper 
; 
} 	
public 
async 
Task 
< 
CategoryDto %
>% &
GetByNameAsync' 5
(5 6
string6 <
name= A
)A B
{ 	
var 
category 
= 
await  
_context! )
.) *

Categories* 4
.4 5
Where5 :
(: ;
x; <
=>= ?
x@ A
.A B
NameB F
==G I
nameJ N
)N O
.O P
FirstOrDefaultAsyncP c
(c d
)d e
;e f
return 
_mapper 
. 
Map 
< 
CategoryDto *
>* +
(+ ,
category, 4
)4 5
;5 6
} 	
public 
async 
Task 
< 
CategoryDto %
>% &
GetByIdAsync' 3
(3 4
int4 7
id8 :
): ;
{ 	
var 
category 
= 
await  
_context! )
.) *

Categories* 4
.4 5
	FindAsync5 >
(> ?
id? A
)A B
;B C
return 
_mapper 
. 
Map 
< 
CategoryDto *
>* +
(+ ,
category, 4
)4 5
;5 6
} 	
public!! 
async!! 
Task!! 
<!! 
List!! 
<!! 
CategoryDto!! *
>!!* +
>!!+ ,
GetAllAsync!!- 8
(!!8 9
)!!9 :
{"" 	
var## 

categories## 
=## 
await## "
_context### +
.##+ ,

Categories##, 6
.##6 7
ToListAsync##7 B
(##B C
)##C D
;##D E
return$$ 
_mapper$$ 
.$$ 
Map$$ 
<$$ 
List$$ #
<$$# $
CategoryDto$$$ /
>$$/ 0
>$$0 1
($$1 2

categories$$2 <
)$$< =
;$$= >
}%% 	
public'' 
async'' 
Task'' $
AddCategoryToFanficAsync'' 2
(''2 3
int''3 6
fanficId''7 ?
,''? @
int''A D

categoryId''E O
)''O P
{(( 	
var)) 
fanficCategory)) 
=))  
new))! $
FanficCategory))% 3
{))4 5
FanficId))6 >
=))? @
fanficId))A I
,))I J

CategoryId))K U
=))V W

categoryId))X b
}))c d
;))d e
await** 
_context** 
.** 
FanficCategories** +
.**+ ,
AddAsync**, 4
(**4 5
fanficCategory**5 C
)**C D
;**D E
await++ 
_context++ 
.++ 
SaveChangesAsync++ +
(+++ ,
)++, -
;++- .
},, 	
public.. 
async.. 
Task.. )
DeleteCategoryFromFanficAsync.. 7
(..7 8
int..8 ;
fanficId..< D
,..D E
int..F I

categoryId..J T
)..T U
{// 	
var00 
fanficCategory00 
=00  
await00! &
_context00' /
.00/ 0
FanficCategories000 @
.11 
Where11 
(11 
x11 
=>11 
x11 
.11 
FanficId11 &
==11' )
fanficId11* 2
&&113 5
x116 7
.117 8

CategoryId118 B
==11C E

categoryId11F P
)11P Q
.11Q R
FirstOrDefaultAsync11R e
(11e f
)11f g
;11g h
_context22 
.22 
FanficCategories22 %
.22% &
Remove22& ,
(22, -
fanficCategory22- ;
)22; <
;22< =
await33 
_context33 
.33 
SaveChangesAsync33 +
(33+ ,
)33, -
;33- .
}44 	
public66 
async66 
Task66 
<66 
CategoryDto66 %
>66% &&
GetCategoryByFanficIdAsync66' A
(66A B
int66B E
fanficId66F N
,66N O
int66P S

categoryId66T ^
)66^ _
{77 	
var88 
fanficCategory88 
=88  
await88! &
_context88' /
.88/ 0
FanficCategories880 @
.99 
Where99 
(99 
x99 
=>99 
x99 
.99 
FanficId99 &
==99' )
fanficId99* 2
&&993 5
x996 7
.997 8

CategoryId998 B
==99C E

categoryId99F P
)99P Q
.99Q R
FirstOrDefaultAsync99R e
(99e f
)99f g
;99g h
return:: 
_mapper:: 
.:: 
Map:: 
<:: 
CategoryDto:: *
>::* +
(::+ ,
fanficCategory::, :
)::: ;
;::; <
};; 	
public== 
async== 
Task== 
<== 
List== 
<== 
CategoryDto== *
>==* +
>==+ ,)
GetAllCategoryByFanficIdAsync==- J
(==J K
int==K N
fanficId==O W
)==W X
{>> 	
var?? 
category?? 
=?? 
await??  
_context??! )
.??) *
FanficCategories??* :
.??: ;
Where??; @
(??@ A
x??A B
=>??C E
x??F G
.??G H
FanficId??H P
==??Q S
fanficId??T \
)??\ ]
.@@ 
Select@@ 
(@@ 
s@@ 
=>@@ 
s@@ 
.@@ 
Category@@ '
)@@' (
.@@( )
ToListAsync@@) 4
(@@4 5
)@@5 6
;@@6 7
returnAA 
_mapperAA 
.AA 
MapAA 
<AA 
ListAA #
<AA# $
CategoryDtoAA$ /
>AA/ 0
>AA0 1
(AA1 2
categoryAA2 :
)AA: ;
;AA; <
}BB 	
}CC 
}DD ç
zC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Migrations\20240105172802_v5.cs
	namespace 	
FanPage
 
. 
Persistence 
. 

Migrations (
{ 
public		 

partial		 
class		 
v5		 
:		 
	Migration		 '
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
RenameColumn )
() *
name 
: 
$str  
,  !
table 
: 
$str !
,! "
newName 
: 
$str %
)% &
;& '
migrationBuilder 
. 
	AddColumn &
<& '
DateTimeOffset' 5
>5 6
(6 7
name 
: 
$str !
,! "
table 
: 
$str !
,! "
type 
: 
$str 0
,0 1
nullable 
: 
false 
,  
defaultValue 
: 
new !
DateTimeOffset" 0
(0 1
new1 4
DateTime5 =
(= >
$num> ?
,? @
$numA B
,B C
$numD E
,E F
$numG H
,H I
$numJ K
,K L
$numM N
,N O
$numP Q
,Q R
DateTimeKindS _
._ `
Unspecified` k
)k l
,l m
newn q
TimeSpanr z
(z {
$num{ |
,| }
$num~ 
,	 Ä
$num
Å Ç
,
Ç É
$num
Ñ Ö
,
Ö Ü
$num
á à
)
à â
)
â ä
)
ä ã
;
ã å
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str !
,! "
table   
:   
$str   !
)  ! "
;  " #
migrationBuilder"" 
."" 
RenameColumn"" )
("") *
name## 
:## 
$str## "
,##" #
table$$ 
:$$ 
$str$$ !
,$$! "
newName%% 
:%% 
$str%% #
)%%# $
;%%$ %
}&& 	
}'' 
}(( ◊
zC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Migrations\20231201130218_v4.cs
	namespace 	
FanPage
 
. 
Persistence 
. 

Migrations (
{ 
public 

partial 
class 
v4 
: 
	Migration '
{		 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str 
, 
table 
: 
$str 
)  
;  !
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str 
, 
table 
: 
$str 
,  
type 
: 
$str 
, 
nullable 
: 
false 
,  
defaultValue 
: 
$str  
)  !
;! "
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str 
, 
table 
: 
$str 
)  
;  !
migrationBuilder   
.   
	AddColumn   &
<  & '
double  ' -
>  - .
(  . /
name!! 
:!! 
$str!! 
,!! 
table"" 
:"" 
$str"" 
,""  
type## 
:## 
$str## (
,##( )
nullable$$ 
:$$ 
false$$ 
,$$  
defaultValue%% 
:%% 
$num%% !
)%%! "
;%%" #
}&& 	
}'' 
}(( Ø
zC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Migrations\20231130163001_v3.cs
	namespace 	
FanPage
 
. 
Persistence 
. 

Migrations (
{ 
public 

partial 
class 
v3 
: 
	Migration '
{		 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
} 	
} 
} É
zC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Migrations\20231121173923_v2.cs
	namespace 	
FanPage
 
. 
Persistence 
. 

Migrations (
{ 
public 

partial 
class 
v2 
: 
	Migration '
{		 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str 
, 
table 
: 
$str 
,  
type 
: 
$str 
, 
nullable 
: 
false 
,  
defaultValue 
: 
$str  
)  !
;! "
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str 
, 
table 
: 
$str 
)  
;  !
} 	
} 
} æå
zC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Migrations\20231121172500_v1.cs
	namespace 	
FanPage
 
. 
Persistence 
. 

Migrations (
{ 
public

 

partial

 
class

 
v1

 
:

 
	Migration

 '
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str "
," #
columns 
: 
table 
=> !
new" %
{ 

CategoryId 
=  
table! &
.& '
Column' -
<- .
int. 1
>1 2
(2 3
type3 7
:7 8
$str9 B
,B C
nullableD L
:L M
falseN S
)S T
. 

Annotation #
(# $
$str$ D
,D E)
NpgsqlValueGenerationStrategyF c
.c d#
IdentityByDefaultColumnd {
){ |
,| }
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 <
,< =
nullable> F
:F G
falseH M
)M N
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 4
,4 5
x6 7
=>8 :
x; <
.< =

CategoryId= G
)G H
;H I
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
FanficId   
=   
table   $
.  $ %
Column  % +
<  + ,
int  , /
>  / 0
(  0 1
type  1 5
:  5 6
$str  7 @
,  @ A
nullable  B J
:  J K
false  L Q
)  Q R
.!! 

Annotation!! #
(!!# $
$str!!$ D
,!!D E)
NpgsqlValueGenerationStrategy!!F c
.!!c d#
IdentityByDefaultColumn!!d {
)!!{ |
,!!| }

AuthorName"" 
=""  
table""! &
.""& '
Column""' -
<""- .
string"". 4
>""4 5
(""5 6
type""6 :
:"": ;
$str""< B
,""B C
nullable""D L
:""L M
false""N S
)""S T
,""T U
Language## 
=## 
table## $
.##$ %
Column##% +
<##+ ,
string##, 2
>##2 3
(##3 4
type##4 8
:##8 9
$str##: @
,##@ A
nullable##B J
:##J K
false##L Q
)##Q R
,##R S
Rating$$ 
=$$ 
table$$ "
.$$" #
Column$$# )
<$$) *
double$$* 0
>$$0 1
($$1 2
type$$2 6
:$$6 7
$str$$8 J
,$$J K
nullable$$L T
:$$T U
false$$V [
)$$[ \
,$$\ ]
Description%% 
=%%  !
table%%" '
.%%' (
Column%%( .
<%%. /
string%%/ 5
>%%5 6
(%%6 7
type%%7 ;
:%%; <
$str%%= C
,%%C D
nullable%%E M
:%%M N
false%%O T
)%%T U
,%%U V
OriginFandom&&  
=&&! "
table&&# (
.&&( )
Column&&) /
<&&/ 0
bool&&0 4
>&&4 5
(&&5 6
type&&6 :
:&&: ;
$str&&< E
,&&E F
nullable&&G O
:&&O P
false&&Q V
)&&V W
,&&W X
CreationDate''  
=''! "
table''# (
.''( )
Column'') /
<''/ 0
DateTimeOffset''0 >
>''> ?
(''? @
type''@ D
:''D E
$str''F `
,''` a
nullable''b j
:''j k
false''l q
)''q r
}(( 
,(( 
constraints)) 
:)) 
table)) "
=>))# %
{** 
table++ 
.++ 

PrimaryKey++ $
(++$ %
$str++% 0
,++0 1
x++2 3
=>++4 6
x++7 8
.++8 9
FanficId++9 A
)++A B
;++B C
},, 
),, 
;,, 
migrationBuilder.. 
... 
CreateTable.. (
(..( )
name// 
:// 
$str// 
,// 
columns00 
:00 
table00 
=>00 !
new00" %
{11 
TagId22 
=22 
table22 !
.22! "
Column22" (
<22( )
int22) ,
>22, -
(22- .
type22. 2
:222 3
$str224 =
,22= >
nullable22? G
:22G H
false22I N
)22N O
.33 

Annotation33 #
(33# $
$str33$ D
,33D E)
NpgsqlValueGenerationStrategy33F c
.33c d#
IdentityByDefaultColumn33d {
)33{ |
,33| }
Name44 
=44 
table44  
.44  !
Column44! '
<44' (
string44( .
>44. /
(44/ 0
type440 4
:444 5
$str446 <
,44< =
nullable44> F
:44F G
false44H M
)44M N
,44N O

IsApproved55 
=55  
table55! &
.55& '
Column55' -
<55- .
bool55. 2
>552 3
(553 4
type554 8
:558 9
$str55: C
,55C D
nullable55E M
:55M N
false55O T
)55T U
}66 
,66 
constraints77 
:77 
table77 "
=>77# %
{88 
table99 
.99 

PrimaryKey99 $
(99$ %
$str99% .
,99. /
x990 1
=>992 4
x995 6
.996 7
TagId997 <
)99< =
;99= >
}:: 
):: 
;:: 
migrationBuilder<< 
.<< 
CreateTable<< (
(<<( )
name== 
:== 
$str==  
,==  !
columns>> 
:>> 
table>> 
=>>> !
new>>" %
{?? 
	ChapterId@@ 
=@@ 
table@@  %
.@@% &
Column@@& ,
<@@, -
int@@- 0
>@@0 1
(@@1 2
type@@2 6
:@@6 7
$str@@8 A
,@@A B
nullable@@C K
:@@K L
false@@M R
)@@R S
.AA 

AnnotationAA #
(AA# $
$strAA$ D
,AAD E)
NpgsqlValueGenerationStrategyAAF c
.AAc d#
IdentityByDefaultColumnAAd {
)AA{ |
,AA| }
TitleBB 
=BB 
tableBB !
.BB! "
ColumnBB" (
<BB( )
stringBB) /
>BB/ 0
(BB0 1
typeBB1 5
:BB5 6
$strBB7 =
,BB= >
nullableBB? G
:BBG H
falseBBI N
)BBN O
,BBO P
ContentCC 
=CC 
tableCC #
.CC# $
ColumnCC$ *
<CC* +
stringCC+ 1
>CC1 2
(CC2 3
typeCC3 7
:CC7 8
$strCC9 ?
,CC? @
nullableCCA I
:CCI J
falseCCK P
)CCP Q
,CCQ R

CreateDateDD 
=DD  
tableDD! &
.DD& '
ColumnDD' -
<DD- .
DateTimeOffsetDD. <
>DD< =
(DD= >
typeDD> B
:DDB C
$strDDD ^
,DD^ _
nullableDD` h
:DDh i
falseDDj o
)DDo p
,DDp q
FanficIdEE 
=EE 
tableEE $
.EE$ %
ColumnEE% +
<EE+ ,
intEE, /
>EE/ 0
(EE0 1
typeEE1 5
:EE5 6
$strEE7 @
,EE@ A
nullableEEB J
:EEJ K
falseEEL Q
)EEQ R
}FF 
,FF 
constraintsGG 
:GG 
tableGG "
=>GG# %
{HH 
tableII 
.II 

PrimaryKeyII $
(II$ %
$strII% 2
,II2 3
xII4 5
=>II6 8
xII9 :
.II: ;
	ChapterIdII; D
)IID E
;IIE F
tableJJ 
.JJ 

ForeignKeyJJ $
(JJ$ %
nameKK 
:KK 
$strKK ;
,KK; <
columnLL 
:LL 
xLL  !
=>LL" $
xLL% &
.LL& '
FanficIdLL' /
,LL/ 0
principalTableMM &
:MM& '
$strMM( 0
,MM0 1
principalColumnNN '
:NN' (
$strNN) 3
,NN3 4
onDeleteOO  
:OO  !
ReferentialActionOO" 3
.OO3 4
CascadeOO4 ;
)OO; <
;OO< =
}PP 
)PP 
;PP 
migrationBuilderRR 
.RR 
CreateTableRR (
(RR( )
nameSS 
:SS 
$strSS  
,SS  !
columnsTT 
:TT 
tableTT 
=>TT !
newTT" %
{UU 
	CommentIdVV 
=VV 
tableVV  %
.VV% &
ColumnVV& ,
<VV, -
intVV- 0
>VV0 1
(VV1 2
typeVV2 6
:VV6 7
$strVV8 A
,VVA B
nullableVVC K
:VVK L
falseVVM R
)VVR S
.WW 

AnnotationWW #
(WW# $
$strWW$ D
,WWD E)
NpgsqlValueGenerationStrategyWWF c
.WWc d#
IdentityByDefaultColumnWWd {
)WW{ |
,WW| }
ContentXX 
=XX 
tableXX #
.XX# $
ColumnXX$ *
<XX* +
stringXX+ 1
>XX1 2
(XX2 3
typeXX3 7
:XX7 8
$strXX9 ?
,XX? @
nullableXXA I
:XXI J
falseXXK P
)XXP Q
,XXQ R
AuthorIdYY 
=YY 
tableYY $
.YY$ %
ColumnYY% +
<YY+ ,
stringYY, 2
>YY2 3
(YY3 4
typeYY4 8
:YY8 9
$strYY: @
,YY@ A
nullableYYB J
:YYJ K
falseYYL Q
)YYQ R
,YYR S
FanficIdZZ 
=ZZ 
tableZZ $
.ZZ$ %
ColumnZZ% +
<ZZ+ ,
intZZ, /
>ZZ/ 0
(ZZ0 1
typeZZ1 5
:ZZ5 6
$strZZ7 @
,ZZ@ A
nullableZZB J
:ZZJ K
falseZZL Q
)ZZQ R
}[[ 
,[[ 
constraints\\ 
:\\ 
table\\ "
=>\\# %
{]] 
table^^ 
.^^ 

PrimaryKey^^ $
(^^$ %
$str^^% 2
,^^2 3
x^^4 5
=>^^6 8
x^^9 :
.^^: ;
	CommentId^^; D
)^^D E
;^^E F
table__ 
.__ 

ForeignKey__ $
(__$ %
name`` 
:`` 
$str`` ;
,``; <
columnaa 
:aa 
xaa  !
=>aa" $
xaa% &
.aa& '
FanficIdaa' /
,aa/ 0
principalTablebb &
:bb& '
$strbb( 0
,bb0 1
principalColumncc '
:cc' (
$strcc) 3
,cc3 4
onDeletedd  
:dd  !
ReferentialActiondd" 3
.dd3 4
Cascadedd4 ;
)dd; <
;dd< =
}ee 
)ee 
;ee 
migrationBuildergg 
.gg 
CreateTablegg (
(gg( )
namehh 
:hh 
$strhh (
,hh( )
columnsii 
:ii 
tableii 
=>ii !
newii" %
{jj 
FanficIdkk 
=kk 
tablekk $
.kk$ %
Columnkk% +
<kk+ ,
intkk, /
>kk/ 0
(kk0 1
typekk1 5
:kk5 6
$strkk7 @
,kk@ A
nullablekkB J
:kkJ K
falsekkL Q
)kkQ R
,kkR S

CategoryIdll 
=ll  
tablell! &
.ll& '
Columnll' -
<ll- .
intll. 1
>ll1 2
(ll2 3
typell3 7
:ll7 8
$strll9 B
,llB C
nullablellD L
:llL M
falsellN S
)llS T
,llT U
Idmm 
=mm 
tablemm 
.mm 
Columnmm %
<mm% &
intmm& )
>mm) *
(mm* +
typemm+ /
:mm/ 0
$strmm1 :
,mm: ;
nullablemm< D
:mmD E
falsemmF K
)mmK L
}nn 
,nn 
constraintsoo 
:oo 
tableoo "
=>oo# %
{pp 
tableqq 
.qq 

PrimaryKeyqq $
(qq$ %
$strqq% :
,qq: ;
xqq< =
=>qq> @
newqqA D
{qqE F
xqqG H
.qqH I
FanficIdqqI Q
,qqQ R
xqqS T
.qqT U

CategoryIdqqU _
}qq` a
)qqa b
;qqb c
tablerr 
.rr 

ForeignKeyrr $
(rr$ %
namess 
:ss 
$strss I
,ssI J
columntt 
:tt 
xtt  !
=>tt" $
xtt% &
.tt& '

CategoryIdtt' 1
,tt1 2
principalTableuu &
:uu& '
$struu( 4
,uu4 5
principalColumnvv '
:vv' (
$strvv) 5
,vv5 6
onDeleteww  
:ww  !
ReferentialActionww" 3
.ww3 4
Cascadeww4 ;
)ww; <
;ww< =
tablexx 
.xx 

ForeignKeyxx $
(xx$ %
nameyy 
:yy 
$stryy C
,yyC D
columnzz 
:zz 
xzz  !
=>zz" $
xzz% &
.zz& '
FanficIdzz' /
,zz/ 0
principalTable{{ &
:{{& '
$str{{( 0
,{{0 1
principalColumn|| '
:||' (
$str||) 3
,||3 4
onDelete}}  
:}}  !
ReferentialAction}}" 3
.}}3 4
Cascade}}4 ;
)}}; <
;}}< =
}~~ 
)~~ 
;~~ 
migrationBuilder
ÄÄ 
.
ÄÄ 
CreateTable
ÄÄ (
(
ÄÄ( )
name
ÅÅ 
:
ÅÅ 
$str
ÅÅ $
,
ÅÅ$ %
columns
ÇÇ 
:
ÇÇ 
table
ÇÇ 
=>
ÇÇ !
new
ÇÇ" %
{
ÉÉ 
Id
ÑÑ 
=
ÑÑ 
table
ÑÑ 
.
ÑÑ 
Column
ÑÑ %
<
ÑÑ% &
int
ÑÑ& )
>
ÑÑ) *
(
ÑÑ* +
type
ÑÑ+ /
:
ÑÑ/ 0
$str
ÑÑ1 :
,
ÑÑ: ;
nullable
ÑÑ< D
:
ÑÑD E
false
ÑÑF K
)
ÑÑK L
.
ÖÖ 

Annotation
ÖÖ #
(
ÖÖ# $
$str
ÖÖ$ D
,
ÖÖD E+
NpgsqlValueGenerationStrategy
ÖÖF c
.
ÖÖc d%
IdentityByDefaultColumn
ÖÖd {
)
ÖÖ{ |
,
ÖÖ| }
Image
ÜÜ 
=
ÜÜ 
table
ÜÜ !
.
ÜÜ! "
Column
ÜÜ" (
<
ÜÜ( )
byte
ÜÜ) -
[
ÜÜ- .
]
ÜÜ. /
>
ÜÜ/ 0
(
ÜÜ0 1
type
ÜÜ1 5
:
ÜÜ5 6
$str
ÜÜ7 >
,
ÜÜ> ?
nullable
ÜÜ@ H
:
ÜÜH I
false
ÜÜJ O
)
ÜÜO P
,
ÜÜP Q
FanficId
áá 
=
áá 
table
áá $
.
áá$ %
Column
áá% +
<
áá+ ,
int
áá, /
>
áá/ 0
(
áá0 1
type
áá1 5
:
áá5 6
$str
áá7 @
,
áá@ A
nullable
ááB J
:
ááJ K
false
ááL Q
)
ááQ R
}
àà 
,
àà 
constraints
ââ 
:
ââ 
table
ââ "
=>
ââ# %
{
ää 
table
ãã 
.
ãã 

PrimaryKey
ãã $
(
ãã$ %
$str
ãã% 6
,
ãã6 7
x
ãã8 9
=>
ãã: <
x
ãã= >
.
ãã> ?
Id
ãã? A
)
ããA B
;
ããB C
table
åå 
.
åå 

ForeignKey
åå $
(
åå$ %
name
çç 
:
çç 
$str
çç ?
,
çç? @
column
éé 
:
éé 
x
éé  !
=>
éé" $
x
éé% &
.
éé& '
FanficId
éé' /
,
éé/ 0
principalTable
èè &
:
èè& '
$str
èè( 0
,
èè0 1
principalColumn
êê '
:
êê' (
$str
êê) 3
,
êê3 4
onDelete
ëë  
:
ëë  !
ReferentialAction
ëë" 3
.
ëë3 4
Cascade
ëë4 ;
)
ëë; <
;
ëë< =
}
íí 
)
íí 
;
íí 
migrationBuilder
îî 
.
îî 
CreateTable
îî (
(
îî( )
name
ïï 
:
ïï 
$str
ïï 
,
ïï 
columns
ññ 
:
ññ 
table
ññ 
=>
ññ !
new
ññ" %
{
óó 
Id
òò 
=
òò 
table
òò 
.
òò 
Column
òò %
<
òò% &
int
òò& )
>
òò) *
(
òò* +
type
òò+ /
:
òò/ 0
$str
òò1 :
,
òò: ;
nullable
òò< D
:
òòD E
false
òòF K
)
òòK L
.
ôô 

Annotation
ôô #
(
ôô# $
$str
ôô$ D
,
ôôD E+
NpgsqlValueGenerationStrategy
ôôF c
.
ôôc d%
IdentityByDefaultColumn
ôôd {
)
ôô{ |
,
ôô| }
Image
öö 
=
öö 
table
öö !
.
öö! "
Column
öö" (
<
öö( )
byte
öö) -
[
öö- .
]
öö. /
>
öö/ 0
(
öö0 1
type
öö1 5
:
öö5 6
$str
öö7 >
,
öö> ?
nullable
öö@ H
:
ööH I
false
ööJ O
)
ööO P
,
ööP Q
FanficId
õõ 
=
õõ 
table
õõ $
.
õõ$ %
Column
õõ% +
<
õõ+ ,
int
õõ, /
>
õõ/ 0
(
õõ0 1
type
õõ1 5
:
õõ5 6
$str
õõ7 @
,
õõ@ A
nullable
õõB J
:
õõJ K
false
õõL Q
)
õõQ R
}
úú 
,
úú 
constraints
ùù 
:
ùù 
table
ùù "
=>
ùù# %
{
ûû 
table
üü 
.
üü 

PrimaryKey
üü $
(
üü$ %
$str
üü% 0
,
üü0 1
x
üü2 3
=>
üü4 6
x
üü7 8
.
üü8 9
Id
üü9 ;
)
üü; <
;
üü< =
table
†† 
.
†† 

ForeignKey
†† $
(
††$ %
name
°° 
:
°° 
$str
°° 9
,
°°9 :
column
¢¢ 
:
¢¢ 
x
¢¢  !
=>
¢¢" $
x
¢¢% &
.
¢¢& '
FanficId
¢¢' /
,
¢¢/ 0
principalTable
££ &
:
££& '
$str
££( 0
,
££0 1
principalColumn
§§ '
:
§§' (
$str
§§) 3
,
§§3 4
onDelete
••  
:
••  !
ReferentialAction
••" 3
.
••3 4
Cascade
••4 ;
)
••; <
;
••< =
}
¶¶ 
)
¶¶ 
;
¶¶ 
migrationBuilder
®® 
.
®® 
CreateTable
®® (
(
®®( )
name
©© 
:
©© 
$str
©© 
,
©©  
columns
™™ 
:
™™ 
table
™™ 
=>
™™ !
new
™™" %
{
´´ 
ReviewId
¨¨ 
=
¨¨ 
table
¨¨ $
.
¨¨$ %
Column
¨¨% +
<
¨¨+ ,
int
¨¨, /
>
¨¨/ 0
(
¨¨0 1
type
¨¨1 5
:
¨¨5 6
$str
¨¨7 @
,
¨¨@ A
nullable
¨¨B J
:
¨¨J K
false
¨¨L Q
)
¨¨Q R
.
≠≠ 

Annotation
≠≠ #
(
≠≠# $
$str
≠≠$ D
,
≠≠D E+
NpgsqlValueGenerationStrategy
≠≠F c
.
≠≠c d%
IdentityByDefaultColumn
≠≠d {
)
≠≠{ |
,
≠≠| }
UserName
ÆÆ 
=
ÆÆ 
table
ÆÆ $
.
ÆÆ$ %
Column
ÆÆ% +
<
ÆÆ+ ,
string
ÆÆ, 2
>
ÆÆ2 3
(
ÆÆ3 4
type
ÆÆ4 8
:
ÆÆ8 9
$str
ÆÆ: @
,
ÆÆ@ A
nullable
ÆÆB J
:
ÆÆJ K
false
ÆÆL Q
)
ÆÆQ R
,
ÆÆR S
Text
ØØ 
=
ØØ 
table
ØØ  
.
ØØ  !
Column
ØØ! '
<
ØØ' (
string
ØØ( .
>
ØØ. /
(
ØØ/ 0
type
ØØ0 4
:
ØØ4 5
$str
ØØ6 <
,
ØØ< =
nullable
ØØ> F
:
ØØF G
false
ØØH M
)
ØØM N
,
ØØN O
Rating
∞∞ 
=
∞∞ 
table
∞∞ "
.
∞∞" #
Column
∞∞# )
<
∞∞) *
double
∞∞* 0
>
∞∞0 1
(
∞∞1 2
type
∞∞2 6
:
∞∞6 7
$str
∞∞8 J
,
∞∞J K
nullable
∞∞L T
:
∞∞T U
false
∞∞V [
)
∞∞[ \
,
∞∞\ ]
CreationDate
±±  
=
±±! "
table
±±# (
.
±±( )
Column
±±) /
<
±±/ 0
DateTimeOffset
±±0 >
>
±±> ?
(
±±? @
type
±±@ D
:
±±D E
$str
±±F `
,
±±` a
nullable
±±b j
:
±±j k
false
±±l q
)
±±q r
,
±±r s
FanficId
≤≤ 
=
≤≤ 
table
≤≤ $
.
≤≤$ %
Column
≤≤% +
<
≤≤+ ,
int
≤≤, /
>
≤≤/ 0
(
≤≤0 1
type
≤≤1 5
:
≤≤5 6
$str
≤≤7 @
,
≤≤@ A
nullable
≤≤B J
:
≤≤J K
false
≤≤L Q
)
≤≤Q R
}
≥≥ 
,
≥≥ 
constraints
¥¥ 
:
¥¥ 
table
¥¥ "
=>
¥¥# %
{
µµ 
table
∂∂ 
.
∂∂ 

PrimaryKey
∂∂ $
(
∂∂$ %
$str
∂∂% 1
,
∂∂1 2
x
∂∂3 4
=>
∂∂5 7
x
∂∂8 9
.
∂∂9 :
ReviewId
∂∂: B
)
∂∂B C
;
∂∂C D
table
∑∑ 
.
∑∑ 

ForeignKey
∑∑ $
(
∑∑$ %
name
∏∏ 
:
∏∏ 
$str
∏∏ :
,
∏∏: ;
column
ππ 
:
ππ 
x
ππ  !
=>
ππ" $
x
ππ% &
.
ππ& '
FanficId
ππ' /
,
ππ/ 0
principalTable
∫∫ &
:
∫∫& '
$str
∫∫( 0
,
∫∫0 1
principalColumn
ªª '
:
ªª' (
$str
ªª) 3
,
ªª3 4
onDelete
ºº  
:
ºº  !
ReferentialAction
ºº" 3
.
ºº3 4
Cascade
ºº4 ;
)
ºº; <
;
ºº< =
}
ΩΩ 
)
ΩΩ 
;
ΩΩ 
migrationBuilder
øø 
.
øø 
CreateTable
øø (
(
øø( )
name
¿¿ 
:
¿¿ 
$str
¿¿ "
,
¿¿" #
columns
¡¡ 
:
¡¡ 
table
¡¡ 
=>
¡¡ !
new
¡¡" %
{
¬¬ 
FanficId
√√ 
=
√√ 
table
√√ $
.
√√$ %
Column
√√% +
<
√√+ ,
int
√√, /
>
√√/ 0
(
√√0 1
type
√√1 5
:
√√5 6
$str
√√7 @
,
√√@ A
nullable
√√B J
:
√√J K
false
√√L Q
)
√√Q R
,
√√R S
TagId
ƒƒ 
=
ƒƒ 
table
ƒƒ !
.
ƒƒ! "
Column
ƒƒ" (
<
ƒƒ( )
int
ƒƒ) ,
>
ƒƒ, -
(
ƒƒ- .
type
ƒƒ. 2
:
ƒƒ2 3
$str
ƒƒ4 =
,
ƒƒ= >
nullable
ƒƒ? G
:
ƒƒG H
false
ƒƒI N
)
ƒƒN O
,
ƒƒO P
Id
≈≈ 
=
≈≈ 
table
≈≈ 
.
≈≈ 
Column
≈≈ %
<
≈≈% &
int
≈≈& )
>
≈≈) *
(
≈≈* +
type
≈≈+ /
:
≈≈/ 0
$str
≈≈1 :
,
≈≈: ;
nullable
≈≈< D
:
≈≈D E
false
≈≈F K
)
≈≈K L
}
∆∆ 
,
∆∆ 
constraints
«« 
:
«« 
table
«« "
=>
««# %
{
»» 
table
…… 
.
…… 

PrimaryKey
…… $
(
……$ %
$str
……% 4
,
……4 5
x
……6 7
=>
……8 :
new
……; >
{
……? @
x
……A B
.
……B C
FanficId
……C K
,
……K L
x
……M N
.
……N O
TagId
……O T
}
……U V
)
……V W
;
……W X
table
   
.
   

ForeignKey
   $
(
  $ %
name
ÀÀ 
:
ÀÀ 
$str
ÀÀ =
,
ÀÀ= >
column
ÃÃ 
:
ÃÃ 
x
ÃÃ  !
=>
ÃÃ" $
x
ÃÃ% &
.
ÃÃ& '
FanficId
ÃÃ' /
,
ÃÃ/ 0
principalTable
ÕÕ &
:
ÕÕ& '
$str
ÕÕ( 0
,
ÕÕ0 1
principalColumn
ŒŒ '
:
ŒŒ' (
$str
ŒŒ) 3
,
ŒŒ3 4
onDelete
œœ  
:
œœ  !
ReferentialAction
œœ" 3
.
œœ3 4
Cascade
œœ4 ;
)
œœ; <
;
œœ< =
table
–– 
.
–– 

ForeignKey
–– $
(
––$ %
name
—— 
:
—— 
$str
—— 8
,
——8 9
column
““ 
:
““ 
x
““  !
=>
““" $
x
““% &
.
““& '
TagId
““' ,
,
““, -
principalTable
”” &
:
””& '
$str
””( .
,
””. /
principalColumn
‘‘ '
:
‘‘' (
$str
‘‘) 0
,
‘‘0 1
onDelete
’’  
:
’’  !
ReferentialAction
’’" 3
.
’’3 4
Cascade
’’4 ;
)
’’; <
;
’’< =
}
÷÷ 
)
÷÷ 
;
÷÷ 
migrationBuilder
ÿÿ 
.
ÿÿ 
CreateTable
ÿÿ (
(
ÿÿ( )
name
ŸŸ 
:
ŸŸ 
$str
ŸŸ %
,
ŸŸ% &
columns
⁄⁄ 
:
⁄⁄ 
table
⁄⁄ 
=>
⁄⁄ !
new
⁄⁄" %
{
€€ 
Id
‹‹ 
=
‹‹ 
table
‹‹ 
.
‹‹ 
Column
‹‹ %
<
‹‹% &
int
‹‹& )
>
‹‹) *
(
‹‹* +
type
‹‹+ /
:
‹‹/ 0
$str
‹‹1 :
,
‹‹: ;
nullable
‹‹< D
:
‹‹D E
false
‹‹F K
)
‹‹K L
.
›› 

Annotation
›› #
(
››# $
$str
››$ D
,
››D E+
NpgsqlValueGenerationStrategy
››F c
.
››c d%
IdentityByDefaultColumn
››d {
)
››{ |
,
››| }
Image
ﬁﬁ 
=
ﬁﬁ 
table
ﬁﬁ !
.
ﬁﬁ! "
Column
ﬁﬁ" (
<
ﬁﬁ( )
byte
ﬁﬁ) -
[
ﬁﬁ- .
]
ﬁﬁ. /
>
ﬁﬁ/ 0
(
ﬁﬁ0 1
type
ﬁﬁ1 5
:
ﬁﬁ5 6
$str
ﬁﬁ7 >
,
ﬁﬁ> ?
nullable
ﬁﬁ@ H
:
ﬁﬁH I
false
ﬁﬁJ O
)
ﬁﬁO P
,
ﬁﬁP Q
	CommentId
ﬂﬂ 
=
ﬂﬂ 
table
ﬂﬂ  %
.
ﬂﬂ% &
Column
ﬂﬂ& ,
<
ﬂﬂ, -
int
ﬂﬂ- 0
>
ﬂﬂ0 1
(
ﬂﬂ1 2
type
ﬂﬂ2 6
:
ﬂﬂ6 7
$str
ﬂﬂ8 A
,
ﬂﬂA B
nullable
ﬂﬂC K
:
ﬂﬂK L
false
ﬂﬂM R
)
ﬂﬂR S
}
‡‡ 
,
‡‡ 
constraints
·· 
:
·· 
table
·· "
=>
··# %
{
‚‚ 
table
„„ 
.
„„ 

PrimaryKey
„„ $
(
„„$ %
$str
„„% 7
,
„„7 8
x
„„9 :
=>
„„; =
x
„„> ?
.
„„? @
Id
„„@ B
)
„„B C
;
„„C D
table
‰‰ 
.
‰‰ 

ForeignKey
‰‰ $
(
‰‰$ %
name
ÂÂ 
:
ÂÂ 
$str
ÂÂ C
,
ÂÂC D
column
ÊÊ 
:
ÊÊ 
x
ÊÊ  !
=>
ÊÊ" $
x
ÊÊ% &
.
ÊÊ& '
	CommentId
ÊÊ' 0
,
ÊÊ0 1
principalTable
ÁÁ &
:
ÁÁ& '
$str
ÁÁ( 2
,
ÁÁ2 3
principalColumn
ËË '
:
ËË' (
$str
ËË) 4
,
ËË4 5
onDelete
ÈÈ  
:
ÈÈ  !
ReferentialAction
ÈÈ" 3
.
ÈÈ3 4
Cascade
ÈÈ4 ;
)
ÈÈ; <
;
ÈÈ< =
}
ÍÍ 
)
ÍÍ 
;
ÍÍ 
migrationBuilder
ÏÏ 
.
ÏÏ 
CreateIndex
ÏÏ (
(
ÏÏ( )
name
ÌÌ 
:
ÌÌ 
$str
ÌÌ ,
,
ÌÌ, -
table
ÓÓ 
:
ÓÓ 
$str
ÓÓ !
,
ÓÓ! "
column
ÔÔ 
:
ÔÔ 
$str
ÔÔ "
)
ÔÔ" #
;
ÔÔ# $
migrationBuilder
ÒÒ 
.
ÒÒ 
CreateIndex
ÒÒ (
(
ÒÒ( )
name
ÚÚ 
:
ÚÚ 
$str
ÚÚ 2
,
ÚÚ2 3
table
ÛÛ 
:
ÛÛ 
$str
ÛÛ &
,
ÛÛ& '
column
ÙÙ 
:
ÙÙ 
$str
ÙÙ #
)
ÙÙ# $
;
ÙÙ$ %
migrationBuilder
ˆˆ 
.
ˆˆ 
CreateIndex
ˆˆ (
(
ˆˆ( )
name
˜˜ 
:
˜˜ 
$str
˜˜ ,
,
˜˜, -
table
¯¯ 
:
¯¯ 
$str
¯¯ !
,
¯¯! "
column
˘˘ 
:
˘˘ 
$str
˘˘ "
)
˘˘" #
;
˘˘# $
migrationBuilder
˚˚ 
.
˚˚ 
CreateIndex
˚˚ (
(
˚˚( )
name
¸¸ 
:
¸¸ 
$str
¸¸ 6
,
¸¸6 7
table
˝˝ 
:
˝˝ 
$str
˝˝ )
,
˝˝) *
column
˛˛ 
:
˛˛ 
$str
˛˛ $
)
˛˛$ %
;
˛˛% &
migrationBuilder
ÄÄ 
.
ÄÄ 
CreateIndex
ÄÄ (
(
ÄÄ( )
name
ÅÅ 
:
ÅÅ 
$str
ÅÅ 0
,
ÅÅ0 1
table
ÇÇ 
:
ÇÇ 
$str
ÇÇ %
,
ÇÇ% &
column
ÉÉ 
:
ÉÉ 
$str
ÉÉ "
)
ÉÉ" #
;
ÉÉ# $
migrationBuilder
ÖÖ 
.
ÖÖ 
CreateIndex
ÖÖ (
(
ÖÖ( )
name
ÜÜ 
:
ÜÜ 
$str
ÜÜ +
,
ÜÜ+ ,
table
áá 
:
áá 
$str
áá #
,
áá# $
column
àà 
:
àà 
$str
àà 
)
àà  
;
àà  !
migrationBuilder
ää 
.
ää 
CreateIndex
ää (
(
ää( )
name
ãã 
:
ãã 
$str
ãã *
,
ãã* +
table
åå 
:
åå 
$str
åå 
,
åå  
column
çç 
:
çç 
$str
çç "
)
çç" #
;
çç# $
migrationBuilder
èè 
.
èè 
CreateIndex
èè (
(
èè( )
name
êê 
:
êê 
$str
êê +
,
êê+ ,
table
ëë 
:
ëë 
$str
ëë  
,
ëë  !
column
íí 
:
íí 
$str
íí "
)
íí" #
;
íí# $
}
ìì 	
	protected
ññ 
override
ññ 
void
ññ 
Down
ññ  $
(
ññ$ %
MigrationBuilder
ññ% 5
migrationBuilder
ññ6 F
)
ññF G
{
óó 	
migrationBuilder
òò 
.
òò 
	DropTable
òò &
(
òò& '
name
ôô 
:
ôô 
$str
ôô  
)
ôô  !
;
ôô! "
migrationBuilder
õõ 
.
õõ 
	DropTable
õõ &
(
õõ& '
name
úú 
:
úú 
$str
úú %
)
úú% &
;
úú& '
migrationBuilder
ûû 
.
ûû 
	DropTable
ûû &
(
ûû& '
name
üü 
:
üü 
$str
üü (
)
üü( )
;
üü) *
migrationBuilder
°° 
.
°° 
	DropTable
°° &
(
°°& '
name
¢¢ 
:
¢¢ 
$str
¢¢ $
)
¢¢$ %
;
¢¢% &
migrationBuilder
§§ 
.
§§ 
	DropTable
§§ &
(
§§& '
name
•• 
:
•• 
$str
•• "
)
••" #
;
••# $
migrationBuilder
ßß 
.
ßß 
	DropTable
ßß &
(
ßß& '
name
®® 
:
®® 
$str
®® 
)
®® 
;
®®  
migrationBuilder
™™ 
.
™™ 
	DropTable
™™ &
(
™™& '
name
´´ 
:
´´ 
$str
´´ 
)
´´  
;
´´  !
migrationBuilder
≠≠ 
.
≠≠ 
	DropTable
≠≠ &
(
≠≠& '
name
ÆÆ 
:
ÆÆ 
$str
ÆÆ  
)
ÆÆ  !
;
ÆÆ! "
migrationBuilder
∞∞ 
.
∞∞ 
	DropTable
∞∞ &
(
∞∞& '
name
±± 
:
±± 
$str
±± "
)
±±" #
;
±±# $
migrationBuilder
≥≥ 
.
≥≥ 
	DropTable
≥≥ &
(
≥≥& '
name
¥¥ 
:
¥¥ 
$str
¥¥ 
)
¥¥ 
;
¥¥ 
migrationBuilder
∂∂ 
.
∂∂ 
	DropTable
∂∂ &
(
∂∂& '
name
∑∑ 
:
∑∑ 
$str
∑∑ 
)
∑∑ 
;
∑∑  
}
∏∏ 	
}
ππ 
}∫∫ ∆
jC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Entities\Tag.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Entities  (
{ 
public 

class 
Tag 
: 
IEntity 
{ 
public 
int 
TagId 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
? 
Name 
{ 
get !
;! "
set# &
;& '
}( )
public 
bool 

IsApproved 
{  
get! $
;$ %
set& )
;) *
}+ ,
public

 
ICollection

 
<

 
	FanficTag

 $
>

$ %

FanficTags

& 0
{

1 2
get

3 6
;

6 7
set

8 ;
;

; <
}

= >
} 
} ˝
nC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Entities\Reviews.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Entities  (
;( )
public 
class 
Reviews 
: 
IEntity 
{ 
[ 
Key 
] 	
public
 
int 
ReviewId 
{ 
get  #
;# $
set% (
;( )
}* +
public		 

string		 
UserName		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public 

string 
Text 
{ 
get 
; 
set !
;! "
}# $
public 

double 
Rating 
{ 
get 
; 
set  #
;# $
}% &
public 

DateTimeOffset 
CreationDate &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 

int 
FanficId 
{ 
get 
; 
set "
;" #
}$ %
public 

Fanfic 
Fanfic 
{ 
get 
; 
set  #
;# $
}% &
} ˙
lC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Entities\Photo.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Entities  (
{ 
public 

class 
Photo 
: 
IEntity  
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
byte 
[ 
] 
Image 
{ 
get !
;! "
set# &
;& '
}( )
public		 
int		 
FanficId		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
[ 	

ForeignKey	 
( 
$str 
) 
]  
public! '
Fanfic( .
Fanfic/ 5
{6 7
get8 ;
;; <
set= @
;@ A
}B C
} 
} ˝
nC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Entities\IEntity.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Entities  (
{ 
public 

	interface 
IEntity 
{ 
} 
} å
pC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Entities\FanficTag.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Entities  (
{ 
public 

class 
	FanficTag 
: 
IEntity $
{ 
[ 	
Key	 
] 
public 
int 
Id 
{ 
get !
;! "
set# &
;& '
}( )
public		 
int		 
FanficId		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
[

 	

ForeignKey

	 
(

 
$str

 
)

 
]

  
public

! '
Fanfic

( .
Fanfic

/ 5
{

6 7
get

8 ;
;

; <
set

= @
;

@ A
}

B C
public 
int 
TagId 
{ 
get 
; 
set  #
;# $
}% &
[ 	

ForeignKey	 
( 
$str 
) 
] 
public $
Tag% (
Tag) ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
} 
} ï	
rC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Entities\FanficPhoto.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Entities  (
{ 
public 

class 
FanficPhoto 
: 
IEntity &
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
byte 
[ 
] 
? 
Image 
{ 
get "
;" #
set$ '
;' (
}) *
public		 
int		 
FanficId		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
[ 	

ForeignKey	 
( 
$str 
) 
]  
public! '
Fanfic( .
Fanfic/ 5
{6 7
get8 ;
;; <
set= @
;@ A
}B C
} 
} •
uC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Entities\FanficCategory.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Entities  (
{ 
public 

class 
FanficCategory 
:  !
IEntity" )
{ 
[ 	
Key	 
] 
public 
int 
Id 
{ 
get !
;! "
set# &
;& '
}( )
public		 
int		 
FanficId		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
[

 	

ForeignKey

	 
(

 
$str

 
)

 
]

  
public

! '
Fanfic

( .
Fanfic

/ 5
{

6 7
get

8 ;
;

; <
set

= @
;

@ A
}

B C
public 
int 

CategoryId 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	

ForeignKey	 
( 
$str  
)  !
]! "
public# )
Category* 2
Category3 ;
{< =
get> A
;A B
setC F
;F G
}H I
} 
} œ
mC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Entities\Fanfic.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Entities  (
{ 
public 

class 
Fanfic 
: 
IEntity !
{ 
[ 	
Key	 
] 
public 
int 
FanficId !
{" #
get$ '
;' (
set) ,
;, -
}. /
public		 
ICollection		 
<		 
Chapter		 "
>		" #
Chapters		$ ,
{		- .
get		/ 2
;		2 3
set		4 7
;		7 8
}		9 :
public 
string 
Title 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 

AuthorName  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
Language 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Stage 
{ 
get !
;! "
set# &
;& '
}( )
public 
ICollection 
< 
FanficCategory )
>) *
FanficCategories+ ;
{< =
get> A
;A B
setC F
;F G
}H I
public 
ICollection 
< 
	FanficTag $
>$ %

FanficTags& 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
public 
ICollection 
< 
Comment "
>" #
Comments$ ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public 
string 
? 
Description "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
bool 
OriginFandom  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
DateTimeOffset 
CreationDate *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
ICollection 
< 
FanficPhoto &
>& '
Photos( .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
public 
ICollection 
< 
Reviews "
>" #
Reviews$ +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
}   
}!! ã	
sC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Entities\CommentPhoto.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Entities  (
{ 
public 

class 
CommentPhoto 
: 
IEntity  '
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
byte 
[ 
] 
Image 
{ 
get !
;! "
set# &
;& '
}( )
public		 
int		 
	CommentId		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
[ 	

ForeignKey	 
( 
$str 
)  
]  !
public" (
Comment) 0
Comment1 8
{9 :
get; >
;> ?
set@ C
;C D
}E F
} 
} ∫
nC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Entities\Comment.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Entities  (
{ 
public 

class 
Comment 
: 
IEntity "
{ 
[ 	
Key	 
] 
public 
int 
	CommentId "
{# $
get% (
;( )
set* -
;- .
}/ 0
public

 
string

 
Content

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
public 
string 

AuthorName  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
FanficId 
{ 
get !
;! "
set# &
;& '
}( )
public 
DateTimeOffset 
	CreatedAt '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
[ 	

ForeignKey	 
( 
$str 
) 
]  
public! '
Fanfic( .
Fanfic/ 5
{6 7
get8 ;
;; <
set= @
;@ A
}B C
public 
ICollection 
< 
CommentPhoto '
>' (
CommentPhoto) 5
{6 7
get8 ;
;; <
set= @
;@ A
}B C
} 
} ƒ

nC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Entities\Chapter.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Entities  (
{ 
public 

class 
Chapter 
: 
IEntity "
{ 
public 
int 
	ChapterId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Title 
{ 
get !
;! "
set# &
;& '
}( )
public		 
string		 
Content		 
{		 
get		  #
;		# $
set		% (
;		( )
}		* +
public 
DateTimeOffset 

CreateDate (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
int 
FanficId 
{ 
get !
;! "
set# &
;& '
}( )
public 
Fanfic 
Fanfic 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} ƒ
oC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Entities\Category.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Entities  (
{ 
public 

class 
Category 
: 
IEntity #
{ 
public 
int 

CategoryId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
? 
Name 
{ 
get !
;! "
set# &
;& '
}( )
public		 
ICollection		 
<		 
FanficCategory		 )
>		) *
FanficCategories		+ ;
{		< =
get		> A
;		A B
set		C F
;		F G
}		H I
}

 
} ã 
sC:\Users\pavlo\source\repos\NonamePoc\FanPage\server\FanPage.Backend\FanPage.Domain.Fanfic\Context\FanficContext.cs
	namespace 	
FanPage
 
. 
Domain 
. 
Fanfic 
.  
Context  '
{ 
public 

class 
FanficContext 
:  
	DbContext! *
{ 
public 
FanficContext 
( 
DbContextOptions -
<- .
FanficContext. ;
>; <
options= D
)D E
:F G
baseH L
(L M
optionsM T
)T U
{		 	
}

 	
public 
DbSet 
< 
Entities 
. 
Fanfic $
>$ %
Fanfic& ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public 
DbSet 
< 
Category 
> 

Categories )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
DbSet 
< 
Tag 
> 
Tags 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DbSet 
< 
	FanficTag 
> 

FanficTags  *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
DbSet 
< 
Chapter 
> 
Chapters &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DbSet 
< 
FanficCategory #
># $
FanficCategories% 5
{6 7
get8 ;
;; <
set= @
;@ A
}B C
public 
DbSet 
< 
Photo 
> 
Photos "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
DbSet 
< 
Comment 
> 
Comments &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DbSet 
< 
FanficPhoto  
>  !
FanficPhotos" .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
public 
DbSet 
< 
Reviews 
> 
Reviews %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
DbSet 
< 
CommentPhoto !
>! "
CommentPhotos# 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
	protected!! 
override!! 
void!! 
OnModelCreating!!  /
(!!/ 0
ModelBuilder!!0 <
modelBuilder!!= I
)!!I J
{"" 	
modelBuilder## 
.## 
Entity## 
<##  
	FanficTag##  )
>##) *
(##* +
)##+ ,
.$$ 
HasKey$$ 
($$ 
ft$$ 
=>$$ 
new$$ !
{$$" #
ft$$$ &
.$$& '
FanficId$$' /
,$$/ 0
ft$$1 3
.$$3 4
TagId$$4 9
}$$: ;
)$$; <
;$$< =
modelBuilder&& 
.&& 
Entity&& 
<&&  
FanficCategory&&  .
>&&. /
(&&/ 0
)&&0 1
.'' 
HasKey'' 
('' 
fc'' 
=>'' 
new'' !
{''" #
fc''$ &
.''& '
FanficId''' /
,''/ 0
fc''1 3
.''3 4

CategoryId''4 >
}''? @
)''@ A
;''A B
}(( 	
})) 
}** 